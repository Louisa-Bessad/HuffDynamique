<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.4/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.4/ http://www.mediawiki.org/xml/export-0.4.xsd" version="0.4" xml:lang="en">
  <siteinfo>
    <sitename>Wikipedia</sitename>
    <base>http://en.wikipedia.org/wiki/Main_Page</base>
    <generator>MediaWiki 1.16alpha-wmf</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2">Media</namespace>
      <namespace key="-1">Special</namespace>
      <namespace key="0" />
      <namespace key="1">Talk</namespace>
      <namespace key="2">User</namespace>
      <namespace key="3">User talk</namespace>
      <namespace key="4">Wikipedia</namespace>
      <namespace key="5">Wikipedia talk</namespace>
      <namespace key="6">File</namespace>
      <namespace key="7">File talk</namespace>
      <namespace key="8">MediaWiki</namespace>
      <namespace key="9">MediaWiki talk</namespace>
      <namespace key="10">Template</namespace>
      <namespace key="11">Template talk</namespace>
      <namespace key="12">Help</namespace>
      <namespace key="13">Help talk</namespace>
      <namespace key="14">Category</namespace>
      <namespace key="15">Category talk</namespace>
      <namespace key="100">Portal</namespace>
      <namespace key="101">Portal talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>Computer science</title>
    <id>5323</id>
    <revision>
      <id>328704174</id>
      <timestamp>2009-11-30T01:17:32Z</timestamp>
      <contributor>
        <username>Allan McInnes</username>
        <id>647621</id>
      </contributor>
      <comment>not clear why this was removed. It's a well-established application area</comment>
      <text xml:space="preserve">'''Computer science''' or '''computing science''' ('''CS''') is the study of the theoretical foundations of [[information]] and [[computation]], and of practical techniques for their implementation and application in [[computer]] systems.&lt;ref&gt;&quot;''Computer science is the study of information''&quot; [http://www.njit.edu/v2/archivecatalog/undergraduate/91/19-und.html New Jersey Institute of Technology], Gutenberg Information Technologies&lt;/ref&gt;&lt;ref&gt;&quot;''Computer science is the study of computation.''&quot; [http://www.csbsju.edu/computerscience/curriculum Computer Science Department, College of Saint Benedict], Saint John's University&lt;/ref&gt;&lt;ref&gt;&quot;''Computer Science is the study of all aspects of computer systems, from the theoretical foundations to the very practical aspects of managing large software projects.''&quot; [http://study.massey.ac.nz/major.asp?major_code=2010&amp;prog_code=93068 Massey University]&lt;/ref&gt; It is frequently described as the systematic study of [[algorithm]]ic processes that create, describe and transform information. According to [[Peter J. Denning]], the fundamental question underlying computer science is, ''&quot;What can be (efficiently) automated?&quot;''&lt;ref name=&quot;Denning_cs_discipline&quot;&gt;{{cite journal | last=Denning | first=P.J. | authorlink=Peter J. Denning | year=2000 | title=Computer Science: The Discipline | url=http://web.archive.org/web/20060525195404/http://www.idi.ntnu.no/emner/dif8916/denning.pdf | journal=Encyclopedia of Computer Science|format=PDF}}&lt;/ref&gt; Computer science has many [[List of computer science fields|sub-fields]]; some, such as [[computer graphics]], emphasize the computation of specific results, while others, such as [[computational complexity theory]], study the properties of [[computational problem]]s. Still others focus on the challenges in implementing computations. For example, [[programming language theory]] studies approaches to describing computations, while [[computer programming]] applies specific [[programming language]]s to solve specific computational problems, and [[human-computer interaction]] focuses on the challenges in making computers and computations useful, usable, and universally accessible to [[humans|people]].

The general public sometimes confuses computer science with vocational areas that deal with computers (such as [[information technology]]), or think that it relates to their own experience of computers, which typically involves activities such as gaming, web-browsing, and word-processing. However, the focus of computer science is more on understanding the properties of the programs used to implement software such as games and web-browsers, and using that understanding to create new programs or improve existing ones.&lt;ref&gt;&quot;''Common myths and preconceptions about Cambridge Computer Science''&quot; [http://www.cl.cam.ac.uk/admissions/undergraduate/myths/ Computer Science Department], [[University of Cambridge]]&lt;/ref&gt;

== History ==
{{Wikiversity|computing}}
{{main | History of computer science}}
The early foundations of what would become computer science predate the invention of the modern [[digital computer]]. Machines for calculating fixed numerical tasks, such as the [[abacus]], have existed since antiquity. [[Wilhelm Schickard]] built the first mechanical calculator in 1623.&lt;ref&gt;{{cite web|author=Nigel Tout|title=Calculator Timeline|url=http://www.vintagecalculators.com/html/calculator_time-line.html|work=Vintage Calculator Web Museum|year=2006|accessdate=2006-09-18}}&lt;/ref&gt; [[Charles Babbage]] designed a [[difference engine]] in [[Victorian era|Victorian]] times&lt;ref&gt;{{cite web | url=http://www.sciencemuseum.org.uk/on-line/babbage/index.asp | title=Science Museum - Introduction to Babbage | accessdate=2006-09-24}}&lt;/ref&gt; helped by [[Ada Lovelace]].&lt;ref&gt;{{cite web| url=http://www.scottlan.edu/Lriddle/women/ada-love.htm| title=A Selection and Adaptation From Ada's Notes found in &quot;Ada, The Enchantress of Numbers,&quot; by Betty Alexandra Toole Ed.D. Strawberry Press, Mill Valley, CA | accessdate=2006-05-04}}&lt;/ref&gt; Around 1900, [[Key punch|punch-card machines]]&lt;ref&gt;{{cite web | url=http://www.pattonhq.com/ibm.html | title=IBM Punch Cards in the U.S. Army | accessdate=2006-09-24}}&lt;/ref&gt; were introduced. However, all of these machines were constrained to perform a single task, or at best some subset of all possible tasks.

During the 1940s, as newer and more powerful computing machines were developed, the term ''computer'' came to refer to the machines rather than their human predecessors. As it became clear that computers could be used for more than just mathematical calculations, the field of computer science broadened to study [[computation]] in general. Computer science began to be established as a distinct academic discipline in the 1950s and early 1960s, with the creation of the first computer science departments and degree programs.&lt;ref name=&quot;Denning_cs_discipline&quot;/&gt;&lt;ref&gt;http://www.cl.cam.ac.uk/conference/EDSAC99/statistics.html&lt;/ref&gt;  Since practical computers became available, many applications of computing have become distinct areas of study in their own right.

Although many initially believed it impossible that computers themselves could actually be a scientific field of study, in the late fifties it gradually became accepted among the greater academic population.&lt;ref name=&quot;Levy1984&quot;&gt;{{cite book | authorlink = Steven Levy | last = Levy | first = Steven | title = [[Hackers: Heroes of the Computer Revolution]] | year = 1984 | isbn = 0-385-19195-2 | publisher = Doubleday }}&lt;/ref&gt; It is the now well-known [[IBM]] brand that formed part of the computer science revolution during this time. IBM (short for International Business Machines) released the IBM 704 and later the IBM 709 computers, which were widely used during the exploration period of such devices. &quot;Still, working with the IBM [computer] was frustrating...if you had misplaced as much as one letter in one instruction, the program would crash, and you would have to start the whole process over again&quot;.&lt;ref name=&quot;Levy1984&quot;/&gt; During the late 1950s, the computer science discipline was very much in its developmental stages, and such issues were commonplace.

Time has seen significant improvements in the usability and effectiveness of computer science technology. Modern society has seen a significant shift from computers being used solely by experts or professionals to a more widespread user base.

== Major achievements ==

{{Expand-section|date=June 2008}}

[[Image:Enigma.jpg|170px|thumbnail|right|The [[Germany|German]] military used the [[Enigma machine]] during [[World War II]] for communication they thought to be secret. The large-scale decryption of Enigma traffic at [[Bletchley Park]] was an important factor that contributed to Allied victory in WWII.&lt;ref name=&quot;kahnbook&quot; /&gt;]]

Despite its short history as a formal academic discipline, computer science has made a number of fundamental contributions to [[science]] and [[society]]. These include:
* The start of the &quot;digital revolution,&quot; which includes the current [[Information Age]] and the [[Internet]].&lt;ref name=&quot;bgu&quot;&gt;http://www.cis.cornell.edu/Dean/Presentations/Slides/bgu.pdf&lt;/ref&gt;
* A formal definition of [[computation]] and [[computability]], and proof that there are computationally [[Undecidable problem|unsolvable]] and [[Intractable#Intractability|intractable]] problems.&lt;ref&gt;{{cite paper | author=Constable, R.L. | date=March 2000 | url=http://www.cs.cornell.edu/cis-dean/bgu.pdf | title=Computer Science: Achievements and Challenges circa 2000|format=PDF}}&lt;/ref&gt;
* The concept of a [[programming language]], a tool for the precise expression of methodological information at various levels of abstraction.&lt;ref&gt;{{cite book
| last=Abelson
| first=H.
| authorlink=Hal Abelson
| coauthors=G.J. Sussman with J. Sussman
| year=1996
| title=Structure and Interpretation of Computer Programs
| edition=2nd
| publisher=MIT Press
| isbn=0-262-01153-0
| quote=The computer revolution is a revolution in the way we think and in the way we express what we think. The essence of this change is the emergence of what might best be called ''procedural epistemology'' — the study of the structure of knowledge from an imperative point of view, as opposed to the more declarative point of view taken by classical mathematical subjects.
}}&lt;/ref&gt;
* In [[cryptography]], [[Cryptanalysis of the Enigma|breaking the Enigma machine]] was an important factor contributing to the Allied victory in World War II.&lt;ref name=&quot;kahnbook&quot;&gt;[[David Kahn]], [[The Codebreakers]], 1967, ISBN 0-684-83130-9.&lt;/ref&gt;
* [[Scientific computing]] enabled advanced study of the mind, and mapping the human genome became possible with [[Human Genome Project]].&lt;ref name=&quot;bgu&quot;/&gt; [[Distributed computing]] projects such as [[Folding@home]] explore [[protein folding]].
* [[Algorithmic trading]] has increased the [[Economic efficiency|efficiency]] and [[Market liquidity|liquidity]] of financial markets by using [[artificial intelligence]], [[machine learning]], and other [[statistics|statistical]] and [[Numerical analysis|numerical]] techniques on a large scale.&lt;ref&gt;[http://www.telegraph.co.uk/money/main.jhtml?xml=/money/2006/08/27/ccsoft27.xml Black box traders are on the march] The Telegraph, August 26, 2006&lt;/ref&gt;

== Fields of computer science ==
As a discipline, computer science spans a range of topics from theoretical studies of algorithms and the limits of computation to the practical issues of implementing computing systems in hardware and software.&lt;ref name=&quot;CSAB1997&quot;&gt;{{cite web|author=Computing Sciences Accreditation Board|title=Computer Science as a Profession|url=http://www.csab.org/comp_sci_profession.html |date=28 May 1997| accessdate=2008-09-01}}&lt;/ref&gt;&lt;ref&gt;{{cite book|author=Committee on the Fundamentals of Computer Science: Challenges and Opportunities, National Research Council |title=Computer Science: Reflections on the Field, Reflections from the Field|url=http://www.nap.edu/catalog.php?record_id=11106#toc|publisher=National Academies Press|isbn=978-0-309-09301-9|date=2004}}&lt;/ref&gt;
The Computer Sciences Accreditation Board (CSAB) &lt;ref&gt;[http://www.csab.org/ Computer Sciences Accreditation Board]&lt;/ref&gt; – which is made up of representatives of the [[Association for Computing Machinery]] (ACM), the [[Institute of Electrical and Electronics Engineers]] Computer Society, and the [[Association for Information Systems]] – identifies four areas that it considers crucial to the discipline of computer science: ''theory of computation'', ''algorithms and data structures'', ''programming methodology and languages'', and ''computer elements and architecture''. In addition to these four areas, CSAB also identifies fields such as software engineering, artificial intelligence, computer networking and communication, database systems, parallel computation, distributed computation, computer-human interaction, computer graphics, operating systems, and numerical and symbolic computation as being important areas of computer science.&lt;ref name=&quot;CSAB1997&quot;/&gt;

=== Theoretical computer science ===
The broader field of [[theoretical computer science]] encompasses both the classical theory of computation and a wide range of other topics that focus on the more abstract, logical, and mathematical aspects of computing.
:{| style=&quot;border:1px solid #ddd; text-align:center; margin: auto;&quot; cellspacing=&quot;15&quot;
|  &lt;math&gt; P \rightarrow Q \,&lt;/math&gt;
|| [[Image:DFAexample.svg|96px]]
|| [[Image:Elliptic curve simple.png|96px]]
|| [[Image:6n-graf.svg|96px]]
|| &lt;math&gt;\Gamma\vdash x: Int&lt;/math&gt;
|| [[Image:Commutative diagram for morphism.svg|96px]]
|| [[Image:SimplexRangeSearching.png|96px]]
|| [[Image:Blochsphere.svg|96px]]
|-
|  [[Mathematical logic]]
|| [[Automata theory]]
|| [[Number theory]]
|| [[Graph theory]]
|| [[Type theory]]
|| [[Category theory]]
|| [[Computational geometry]]
|| [[Quantum computer|Quantum computing theory]]
|}

==== Theory of computation ====
The study of the [[theory of computation]] is focused on answering fundamental questions about what can be computed and what amount of resources are required to perform those computations. In an effort to answer the first question, [[Computability theory (computer science)|computability theory]] examines which computational problems are solvable on various theoretical [[models of computation]]. The second question is addressed by [[computational complexity theory]], which studies the time and space costs associated with different approaches to solving a computational problem. 

The famous &quot;[[P = NP problem|P=NP?]]&quot; problem, one of the [[Millennium Prize Problems]],&lt;ref&gt;[http://www.claymath.org/millennium/P_vs_NP/ Clay Mathematics Institute] P=NP&lt;/ref&gt; is an open problem in the theory of computation.

:{| style=&quot;border:1px solid #ddd; text-align:center; margin: auto;&quot; cellspacing=&quot;15&quot;
| [[Image:Wang tiles.png|96px]]
|| '''P = NP''' ?
|-
|  [[Computability theory (computer science)|Computability theory]]
|| [[Computational complexity theory]]
|}

=== Algorithms and data structures ===
:{| style=&quot;border:1px solid #ddd; text-align:center; margin: auto;&quot; cellspacing=&quot;15&quot;
|  &lt;math&gt;O(n^2)&lt;/math&gt;
|| [[Image:Sorting quicksort anim.gif|96px]]
|| [[Image:Singly linked list.png|96px]]
|-
|  [[Analysis of algorithms]]
|| [[Algorithms]]
|| [[Data structures]]
|}

=== Programming methodology and languages ===
:{| style=&quot;border:1px solid #ddd; text-align:center; margin: auto;&quot; cellspacing=&quot;15&quot;
|  [[Image:Ideal compiler.png|96px]]
|| [[Image:Python add5 syntax.svg|96px]]
|-
|  [[Compilers]]
|| [[Programming languages]]
|}

=== Computer elements and architecture ===
:{| style=&quot;border:1px solid #ddd; text-align:center; margin: auto;&quot; cellspacing=&quot;15&quot;
|  [[Image:NOR ANSI.svg|96px]]
|  [[Image:Fivestagespipeline.png|96px]]
|  [[Image:SIMD.svg|96px]]
|-
|  [[Digital logic]]
|  [[Microarchitecture]]
|  [[Multiprocessing]]
|}

=== Numerical and symbolic computation ===
:{| style=&quot;border:1px solid #ddd; text-align:center; margin: auto;&quot; cellspacing=&quot;15&quot;
|  [[Image:1u04-argonaute.png|96px]]
|| [[Image:User-FastFission-brain.gif|96px]]
|| [[Image:Naphthalene-3D-balls.png|96px]]
|| [[Image:Neuron-no labels.png|96px]]
|| [[Image:X-43A (Hyper - X) Mach 7 computational fluid dynamic (CFD).jpg|96px]]
|| [[Image:Wind-particle.png|96px]]
|| &lt;math&gt;y = \sin(x) + c&lt;/math&gt;
|-
|  [[Bioinformatics]]
|| [[Cognitive Science]]
|| [[Computational chemistry]]
|| [[Computational neuroscience]]
|| [[Computational physics]]
|| [[Numerical analysis|Numerical algorithms]]
|| [[Symbolic mathematics]]
|}

=== Applications ===
The following disciplines are often studied from a more theoretical, computer science viewpoint, as well as from a more practical, engineering perspective.

:{| style=&quot;border:1px solid #ddd; text-align:center; margin: auto;&quot; cellspacing=&quot;15&quot;
|  [[Image:Operating system placement.svg|96px]]
|| [[Image:NETWORK-Library-LAN.png|96px]]
|| [[Image:5-cell.gif|96px]]
|| [[Image:Corner.png|96px]]
|| [[Image:Emp Tables (Database).PNG|96px]]
|-
|  [[Operating systems]]
|| [[Computer networking|Computer networks]]
|| [[Computer graphics]]
|| [[Computer vision]]
|| [[Database]]s
|-
|  [[Image:Padlock.svg|96px]]
|| [[Image:ArtificialFictionBrain.png|96px]]
|| [[Image:Roomba original.jpg|96px]]
|| [[Image:Wacom Pen-tablet.jpg|96px]]
||&lt;!-- Image with inadequate rationale removed:  [[Image:IPhone EDGE and 3G.png|96px]] --&gt;
|-
|  [[Computer security]]
|| [[Artificial intelligence]]
|| [[Robotics]]
|| [[Human–computer interaction]]
|| [[Ubiquitous computing]]
|}

== Relationship with other fields ==
Despite its name, a significant amount of computer science does not involve the study of computers themselves. Because of this, several alternative names have been proposed. Certain departments of major universities prefer the term ''computing science'', to emphasize precisely that difference. Danish scientist [[Peter Naur]] suggested the term ''datalogy'', to reflect the fact that the scientific discipline revolves around data and data treatment, while not necessarily involving computers. The first scientific institution to use the term was the Department of Datalogy at the University of Copenhagen, founded in 1969, with Peter Naur being the first professor in datalogy. The term is used mainly in the Scandinavian countries. Also, in the early days of computing, a number of terms for the practitioners of the field of computing were suggested in the ''Communications of the ACM'' – ''turingineer'', ''turologist'', ''flow-charts-man'', ''applied meta-mathematician'', and ''applied epistemologist''.&lt;ref&gt;Communications of the ACM 1(4):p.6&lt;/ref&gt;  Three months later in the same journal, ''comptologist'' was suggested, followed next year by ''hypologist''.&lt;ref&gt;Communications of the ACM 2(1):p.4&lt;/ref&gt;  The term ''computics'' has also been suggested.&lt;ref&gt;IEEE Computer 28(12):p.136&lt;/ref&gt; ''Informatik'' was a term used in Europe with more frequency.

The renowned computer scientist [[Edsger W. Dijkstra|Edsger Dijkstra]] stated, &quot;Computer science is no more about computers than astronomy is about telescopes.&quot; The design and deployment of computers and computer systems is generally considered the province of disciplines other than computer science. For example, the study of [[computer hardware]] is usually considered part of [[computer engineering]], while the study of commercial [[computer system]]s and their deployment is often called [[information technology]] or [[information systems]]. However, there has been much cross-fertilization of ideas between the various computer-related disciplines. Computer science research has also often crossed into other disciplines, such as [[philosophy]], [[cognitive science]], [[economics]], [[mathematics]], [[physics]], and [[linguistics]].

Computer science is considered by some to have a much closer relationship with [[mathematics]] than many scientific disciplines, with some observers saying that computing is a mathematical science.&lt;ref name=&quot;Denning_cs_discipline&quot; /&gt; Early computer science was strongly influenced by the work of mathematicians such as [[Kurt Gödel]] and [[Alan Turing]], and there continues to be a useful interchange of ideas between the two fields in areas such as [[mathematical logic]], [[category theory]], [[domain theory]], and [[algebra]].

The relationship between computer science and [[software engineering]] is a contentious issue, which is further muddied by [[Debates within software engineering|disputes]] over what the term &quot;software engineering&quot; means, and how computer science is defined. [[David Parnas]], taking a cue from the relationship between other engineering and science disciplines, has claimed that the principal focus of computer science is studying the properties of computation in general, while the principal focus of software engineering is the design of specific computations to achieve practical goals, making the two separate but complementary disciplines.&lt;ref&gt;{{cite journal | last = Parnas
| first = David L.
| authorlink = David Parnas
| year = 1998
| title = [http://citeseer.ist.psu.edu/parnas98software.html Software Engineering Programmes are not Computer Science Programmes]
| journal = Annals of Software Engineering
| volume = 6
| pages = 19–37
| doi = 10.1023/A:1018949113292
}}, p. 19: &quot;Rather than treat software engineering as a subfield of computer science, I treat it as an element of the set, Civil Engineering, Mechanical Engineering, Chemical Engineering, Electrical Engineering, ..&quot;&lt;/ref&gt;

The academic, political, and funding aspects of computer science tend to depend on whether a department formed with a mathematical emphasis or with an engineering emphasis. Computer science departments with a mathematics emphasis and with a numerical orientation consider alignment [[computational science]]. Both types of departments tend to make efforts to bridge the field educationally if not across all research.

== Computer science education ==
Some universities teach computer science as a theoretical study of computation and algorithmic reasoning. These programs often feature the [[theory of computation]], [[analysis of algorithms]], [[formal methods]], [[Concurrency (computer science)|concurrency theory]], [[databases]], [[computer graphics]] and [[systems analysis]], among others. They typically also teach [[computer programming]], but treat it as a vessel for the support of other fields of computer science rather than a central focus of high-level study.

Other colleges and universities, as well as [[secondary school]]s and vocational programs that teach computer science, emphasize the practice of advanced programming rather than the theory of algorithms and computation in their computer science curricula. Such curricula tend to focus on those skills that are important to workers entering the software industry. The practical aspects of computer programming are often referred to as [[software engineering]]. However, there is a lot of [[Debates within software engineering|disagreement]] over the meaning of the term, and whether or not it is the same thing as programming.

== See also ==
{{portal|Computer science|Internet_map_1024.jpg}}
{{portal|Computer networking|Bus_icon.svg}}
{{Portal|Information technology|Computer-aj_aj_ashton_01.svg}}
&lt;div style=&quot;column-count:2;-moz-column-count:2;-webkit-column-count:2&quot;&gt;
{{main|Outline of computer science}}
* [[Career domains in computer science]]
* [[Computer scientist]]
* [[Computing]]
* [[Didactics of informatics]]
* [[English in computing|English in computer science]]
* [[History of computer science]]
* [[Informatics (academic field)|Informatics]]
* [[Information and communication technologies for development]]
* [[List of academic computer science departments]]
* [[List of computer science conferences]]
* [[List of computer scientists]]
* [[Unsolved problems in computer science|List of open problems in computer science]]
* [[List of important publications in computer science|List of publications in computer science]]
* [[List of pioneers in computer science]]
* [[List of software engineering topics]]
* [[Philosophy of computer science]]
* [[Software engineering]]
* [[Women in computing]]
&lt;/div&gt;

== References ==
{{reflist|2}}

== Further reading ==
* [[Association for Computing Machinery]]. [http://www.acm.org/class/1998/overview.html 1998 ACM Computing Classification System]. 1998.
* [[IEEE Computer Society]] and the [[Association for Computing Machinery]]. [http://www.computer.org/portal/cms_docs_ieeecs/ieeecs/education/cc2001/cc2001.pdf Computing Curricula 2001: Computer Science]. December 15, 2001.
* [[Peter J. Denning]]. ''[http://portal.acm.org/citation.cfm?id=1053309&amp;coll=&amp;dl=ACM&amp;CFID=15151515&amp;CFTOKEN=6184618 Is computer science science?]'', Communications of the ACM, April 2005.
* [[Donald E. Knuth]]. ''Selected Papers on Computer Science,'' CSLI Publications, Cambridge Univ. Press, 1996.
* [[Peter J. Denning]], ''[http://portal.acm.org/citation.cfm?id=971303&amp;dl=ACM&amp;coll=&amp;CFID=15151515&amp;CFTOKEN=6184618 Great principles in computing curricula]'', Technical Symposium on Computer Science Education, 2004.

== External links ==
{{wikibooks}}
{{wikiversity | Portal:Computer Science}}

* {{dmoz|Computers/Computer_Science/}}
* [http://www.lecturefox.com/computerscience/ Directory of free university lectures in Computer Science] 
* [http://videolectures.net/Top/Computer_Science/ Collection of computer science lectures]
* [http://liinwww.ira.uka.de/ bibliography/ Collection of Computer Science Bibliographies]
* [http://csdir.org/ CS Directory and resources]
* [http://se.ethz.ch/~meyer/gallery/ Photographs of computer scientists] ([[Bertrand Meyer]]'s gallery)

=== Webcasts ===
* [http://www.oid.ucla.edu/webcasts/courses/2006-2007/2006fall/cs1 UCLA Computer Science 1 Freshman Computer Science Seminar Section 1]
* [http://webcast.berkeley.edu/course_details.php?seriesid=1906978395 Berkeley Introduction to Computers]

{{Computer_Science}}

{{DEFAULTSORT:Computer Science}}
[[Category:Computer science| ]]

[[af:Rekenaarwetenskap]]
[[als:Informatik]]
[[ar:علم الحاسوب]]
[[an:Informatica]]
[[ast:Informática]]
[[bn:কম্পিউটার বিজ্ঞান]]
[[zh-min-nan:Tiān-náu kho-ha̍k]]
[[bs:Informatika]]
[[br:Urzhiataerezh]]
[[bg:Информатика]]
[[ca:Informàtica]]
[[cs:Informatika (počítačová věda)]]
[[da:Datalogi]]
[[de:Informatik]]
[[et:Informaatika]]
[[el:Επιστήμη υπολογιστών]]
[[es:Ciencias de la computación]]
[[eo:Komputado]]
[[eu:Informatika]]
[[fa:علوم رایانه]]
[[fo:Teldufrøði]]
[[fr:Informatique]]
[[fy:Ynformatika]]
[[fur:Informatiche]]
[[ga:Ríomheolaíocht]]
[[gv:Sheanse co-earrooagh]]
[[gl:Informática]]
[[ko:전산학]]
[[hy:Ինֆորմատիկա]]
[[hi:संगणक विज्ञान]]
[[hr:Računarstvo]]
[[io:Informatiko]]
[[id:Ilmu komputer]]
[[ia:Informatica]]
[[ie:Informatica]]
[[iu:ᑐᓴᐅᒪᖃᑦᑕᐅᑎᔾᔪᑎᓂᒃ ᐊᐅᓚᑦᑎᔩᑦ/tusaumaqattautijjutinik aulattijiit]]
[[is:Tölvunarfræði]]
[[it:Informatica]]
[[he:מדעי המחשב]]
[[kn:ಗಣಕ ವಿಜ್ಞಾನ]]
[[ka:საინფორმაციო მეცნიერება]]
[[csb:Infòrmatika]]
[[ht:Enfòmatik]]
[[lad:Informatika]]
[[la:Informatica]]
[[lv:Datorzinātne]]
[[lb:Informatik]]
[[lt:Kompiuterių mokslas]]
[[li:Informatica]]
[[jbo:samske]]
[[hu:Számítástechnika]]
[[mk:Информатика]]
[[mg:Informatika]]
[[ml:കമ്പ്യൂട്ടര്‍ ശാസ്ത്രം]]
[[ms:Sains komputer]]
[[nl:Informatica]]
[[nds-nl:Infermatika]]
[[ja:計算機科学]]
[[no:Informatikk]]
[[nn:Informatikk]]
[[oc:Informatica]]
[[pms:Anformàtica]]
[[pl:Informatyka]]
[[pt:Ciência da computação]]
[[ro:Informatică]]
[[ru:Информатика]]
[[sq:Shkenca kompjuterike]]
[[scn:Nfurmàtica]]
[[simple:Computer science]]
[[sk:Veda o počítačoch]]
[[sl:Računalništvo]]
[[sr:Рачунарство]]
[[fi:Tietojenkäsittelytiede]]
[[sv:Datavetenskap]]
[[tl:Agham pangkompyuter]]
[[ta:கணினியியல்]]
[[th:วิทยาการคอมพิวเตอร์]]
[[tr:Bilişim bilimi]]
[[tk:Informatika]]
[[uk:Інформатика]]
[[ug:بیلگیسايار مۈھەندیسلیغی]]
[[vec:Computer Science]]
[[vi:Khoa học máy tính]]
[[wa:Infôrmatike]]
[[wo:Xam-xamu nosukaay]]
[[wuu:计算机科学]]
[[yo:Informatics (Ifitonileti)]]
[[zh-yue:電算]]
[[bat-smg:Infuormatėka]]
[[zh:计算机科学]]</text>
    </revision>
  </page>
  <page>
    <title>Outline of computer science</title>
    <id>169633</id>
    <revision>
      <id>322394104</id>
      <timestamp>2009-10-27T19:41:27Z</timestamp>
      <contributor>
        <username>Drothlis</username>
        <id>4201703</id>
      </contributor>
      <minor/>
      <comment>Removed duplicate list item</comment>
      <text xml:space="preserve">'''[[Computer science]]''', or '''computing science''', is the study of the theoretical foundations of [[information]] and [[computation]] and their implementation and application in [[computer system]]s. One well known subject classification system for [[computer science]] is the [[ACM Computing Classification System]] devised by the [[Association for Computing Machinery]]. 

The following outline is provided as an overview of and topical guide to computer science.

== Mathematical foundations ==

* [[Mathematical logic]] – [[Boolean logic]] and other ways of [[mathematical model|modeling]] logical queries; the uses and limitations of formal proof methods
* [[Number theory]] – Theory of the [[integer]]s.  Used in [[cryptography]] as well as a test domain in [[artificial intelligence]].
* [[Graph theory]] – Foundations for data structures and searching algorithms.
* [[Game theory]] – Useful in [[artificial intelligence]] and [[cybernetics]].
* [[Coding theory]] – Useful in networking and other areas where computers communicate with each other.

== Branches ==&lt;!-- This section is linked from [[List of academic disciplines]] --&gt;

=== Theory of computation ===
{{main | Theory of computation}}
* [[Automata theory]] – Different logical structures for solving problems.
* [[Computability theory (computer science)|Computability theory]] – What is calculable with the current models of computers. Proofs developed by [[Alan Turing]] and others provide insight into the possibilities of what may be computed and what may not.
* [[Computational complexity theory]] – Fundamental bounds (especially time and storage space) on classes of computations.
* [[Quantum computing]] theory – Explores computational models involving [[quantum superposition]] of bits.

=== Algorithms and data structures ===

* [[Algorithms]] – Sequential and parallel computational procedures for solving a wide range of problems.
* [[Data structure]]s – The organization and manipulation of data.

=== Programming languages and compilers ===

* [[Compiler theory]] – Theory of [[compiler]] design, based on [[Automata theory]].
* [[Programming language|Programming language pragmatics]] – Taxonomy of programming languages, their strength and weaknesses. Various [[programming paradigms]], such as [[object-oriented programming]].
* [[Programming language theory]]
* [[Formal semantics of programming languages|Formal semantics]] – rigorous mathematical study of the meaning of programs.
* [[Type theory]] – Formal analysis of the types of data, and the use of these types to understand properties of programs — especially program safety.

=== Concurrent, parallel, and distributed systems ===

* [[Concurrency (computer science)|Concurrency]] – The theory and practice of simultaneous computation; data safety in any multitasking or multithreaded environment.
* [[Parallel computing]] – Computing using multiple concurrent threads of execution, devising algorithms for solving problems on multiple processors to achieve maximal speed-up compared to sequential execution.
* [[Distributed computing]] – Computing using multiple computing devices over a network to accomplish a common objective or task and there by reducing the latency involved in single processor contributions for any task.

=== Software engineering ===

* [[Formal methods]] – Mathematical approaches for describing and reasoning about software designs.
* [[Software engineering]] – The principles and practice of designing, developing, and testing programs, as well as proper engineering practices.
* [[Reverse engineering]] – The application of the scientific method to the understanding of arbitrary existing software
*  [[Algorithm design]] – Using ideas from algorithm theory to creatively design solutions to real tasks
*  [[Computer programming]] – The practice of using a programming language to implement algorithms

=== Computer architecture ===

* [[Computer architecture]] – The design, organization, optimization and verification of a computer system, mostly about [[CPU]]s and [[Memory (computers)|Memory]] subsystem (and the bus connecting them).
*  [[Operating system]]s – Systems for managing computer programs and providing the basis of a usable system.

=== Communications and Security===

*  [[Computer networking|Networking]] – Algorithms and protocols for reliably communicating data across different shared or dedicated media, often including [[error correction]].
*  [[Computer security]] – Practical aspects of securing computer systems and computer networks.
*  [[Cryptography]] – Applies results from complexity, probability and number theory to invent and [[cryptoanalysis|break codes]], and analyze the security of [[cryptographic protocols]].

=== Databases ===

* [[Relational databases]] – the [[set theory|set theoretic]] and algorithmic foundation of databases.
*  [[Data mining]] – Study of algorithms for searching and processing information in documents and databases; closely related to [[information retrieval]].

=== Artificial intelligence ===

* [[Artificial intelligence]] – The implementation and study of systems that exhibit an autonomous intelligence or behavior of their own.
*  [[Automated reasoning]] – Solving engines, such as used in [[Prolog]], which produce steps to a result given a query on a fact and rule database, and [[Automated theorem proving|automated theorem provers]] that aim to prove [[mathematical theorem]]s with some assistance from a programmer.
*  [[Robotics]] – Algorithms for controlling the behavior of robots.
*  [[Computer vision]] – Algorithms for identifying three dimensional objects from a two dimensional picture.
*  [[Machine learning]] – Automated creation of a set of rules and axioms based on input.

=== Computer graphics ===

*  [[Computer graphics]] – Algorithms both for generating visual images synthetically, and for integrating or altering visual and spatial information sampled from the real world.
*  [[Image processing]] – Determining information from an image through computation.
*  [[Human computer interaction]] – The study and design of computer interfaces that people use.

=== Scientific computing ===

* [[Numerical analysis]] – Approximate numerical solution of mathematical problems such as [[Root-finding algorithm|root-finding]], [[Numerical integration|integration]], the [[Numerical ordinary differential equations|solution of ordinary differential equations]]; the approximation of [[special functions]].
* [[Symbolic computation]] – Manipulation and solution of expressions in symbolic form, also known as [[Computer algebra]].
* [[Computational physics]] – Numerical simulations of large non-analytic systems
* [[Computational chemistry]] – Computational modelling of theoretical chemistry in order to determine chemical structures and properties
* [[Bioinformatics]] – The use of computer science to maintain, analyse, store [[biological data]] and to assist in solving biological problems such as [[Protein folding]], function prediction and [[Phylogeny]].
* [[Computational neuroscience]] – Computational modelling of [[neurophysiology]].

== History ==
{{main|History of computer science}}

== Vocations ==
* [[Programmer]]
* [[Software architect]]
* [[Software developer]]
* [[Software tester]]
* [[Software engineer]]

== Basic concepts ==

=== Data and data structures===
* [[Associative array]]
* [[Array data structure|Array]]
* [[Data structure]]
* [[Datatype|Data type]]
* [[Databases|Database]]
* [[Hash table]]
* [[List (computing)|List]]
* [[Matrix (computer science)]]
* [[String (computer science)|String]]
* [[Tree (data structure)|Tree]]

===Other ===
* [[Abstraction (computer science)|Abstraction]]
* [[Big O notation]]
* [[Closure (computer science)|Closure]]
* [[Compiler]]

==Programming paradigms==


===Object oriented programming===
* [[Object oriented programming]]
* [[Class (computer science)|Class]]
* [[Inheritance (computer science)|Inheritance]]
* [[Object (computer science)|Object]]

===Other===
* [[Functional programming]]
* [[Procedural programming]]
* [[Logic programming]]

== See also ==
{{portal|Computer science}}

* [[Cognitive science]]

== External links ==
{{sisterlinks|Computer science}}

* {{dmoz|Computers/Computer_Science/}}
* [http://www.lecturefox.com/computerscience/ Directory of free university lectures in Computer Science] 
* [http://liinwww.ira.uka.de/bibliography/ Collection of Computer Science Bibliographies]
* [http://se.ethz.ch/~meyer/gallery/ Photographs of computer scientists] ([[Bertrand Meyer]]'s gallery)

; Webcasts
* [http://www.oid.ucla.edu/webcasts/courses/2006-2007/2006fall/cs1 UCLA Computer Science 1 Freshman Computer Science Seminar Section 1]
* [http://webcast.berkeley.edu/course_details.php?seriesid=1906978395 Berkeley Introduction to Computers]

{{Outline footer}}

[[Category:Outlines|Computer science]]
[[Category:Computer science|*]]
[[Category:Computer lists|Computer science topics]]

[[zh:基本的電腦科學主題列表]]</text>
    </revision>
  </page>
  <page>
    <title>Portal:Computer science</title>
    <id>1472580</id>
    <revision>
      <id>327941624</id>
      <timestamp>2009-11-25T22:37:31Z</timestamp>
      <contributor>
        <ip>80.230.60.84</ip>
      </contributor>
      <comment>[[he:פורטל:מדעי המחשב]]</comment>
      <text xml:space="preserve">&lt;!-- This portal was created using subst:box portal skeleton  --&gt;
{{browsebar}}
{{Shortcut|P:CS}}
:&lt;font size=&quot;2&quot;&gt;''
This portal is for the [[List of academic disciplines|academic discipline]] of '''computing science'''. For other related portals such as [[Portal:Computer networking|computer networking]], [[Portal:Computer security|computer security]] and [[Portal:Information technology|information technology]], please see '''[[Portal:Contents/Portals#Technology and applied sciences|portals: technology and applied sciences]]'''.''
&lt;/font&gt;
&lt;div style=&quot;float:right; width:100%&quot;&gt;

{{/box-header|&lt;big&gt;The Computing Science Portal&lt;/big&gt;|{{FULLPAGENAME}}/Intro|}}
{{{{FULLPAGENAME}}/Intro}}
{{/box-footer|}}

&lt;/div&gt;

&lt;div style=&quot;float:left; width:60%;&quot;&gt; &lt;!-- 1st Section, column 1:
--  This width is added to the the margin below to equal 99%--&gt;

{{/box-header|''Selected article''|{{FULLPAGENAME}}/Selected article|}}
{{{{FULLPAGENAME}}/Selected article}}
{{/box-footer|}}

{{/box-header|''Selected picture''|{{FULLPAGENAME}}/Selected picture|}}
{{{{FULLPAGENAME}}/Selected picture}}
{{/box-footer|}}

&lt;/div&gt;
&lt;div style=&quot;float:right; width:39%&quot;&gt; &lt;!-- 1st Section, column 2:
--  This division should be right of the above --&gt;

{{/box-header|''Related portals''|{{FULLPAGENAME}}/Related portals|}}
{{{{FULLPAGENAME}}/Related portals}}
{{/box-footer|}}

{{/box-header|''Selected biography''|{{FULLPAGENAME}}/Selected biography|}}
{{{{FULLPAGENAME}}/Selected biography}}
{{/box-footer|}}

&lt;/div&gt;
&lt;div style=&quot;float:right; width:100%&quot;&gt;&lt;!--2nd Section, full width--&gt;

{{/box-header|''{{PAGENAME}} topics''|{{FULLPAGENAME}}/{{PAGENAME}} topics|}}
{{{{FULLPAGENAME}}/{{PAGENAME}} topics}}
{{/box-footer|}}

&lt;/div&gt;
&lt;div style=&quot;float:left; width:60%;&quot;&gt; &lt;!-- 3rd Section, column 1:
--  This width is added to the the margin below to equal 99%--&gt;

{{/box-header|''Categories''|{{FULLPAGENAME}}/Categories|}}
{{{{FULLPAGENAME}}/Categories}}
{{/box-footer|}}

&lt;/div&gt;
&lt;div style=&quot;float:right; width:39%&quot;&gt; &lt;!-- 3rd Section, column 2:
--  This division should be right of the above --&gt;

{{/box-header|''Related WikiProjects''|{{FULLPAGENAME}}/WikiProjects|}}
{{{{FULLPAGENAME}}/WikiProjects}}
{{/box-footer|}}

{{/box-header|''Things you can do''|{{FULLPAGENAME}}/Things you can do|}}
{{{{FULLPAGENAME}}/Things you can do}}
{{/box-footer|}}

&lt;/div&gt;

&lt;div style=&quot;float:right; width:100%&quot;&gt;

{{/box-header|''Associated Wikimedia''|Template:WikimediaForPortals|}}
{{WikimediaForPortals}}
{{/box-footer|}}

&lt;center&gt;[[Special:PrefixIndex/Portal:Computer_science|Directory of pages for ''Portal:Computing_science'']]
&lt;/center&gt;

{{portals}}

&lt;/div&gt;

{{Purgepage}}

__NOTOC__ __NOEDITSECTION__


[[Category:{{PAGENAME}}|*]]
[[Category:Computing portals|{{PAGENAME}}]]

[[bg:Портал:Информатика и Интернет]]
[[bs:Portal:Informatika]]
[[ca:Portal:Informàtica]]
[[da:Portal:Informationsteknologi]]
[[de:Portal:Informatik]]
[[es:Portal:Informática]]
[[fr:Portail:Informatique]]
[[he:פורטל:מדעי המחשב]]
[[hu:Wikipédia:Informatika portál]]
[[it:Portale:Informatica]]
[[ms:Portal:Sains komputer]]
[[nl:Portaal:Informatica]]
[[ja:Portal:コンピュータ]]
[[pl:Portal:Informatyka]]
[[pt:Portal:Tecnologias de informação]]
[[ro:Portal:Informatică]]
[[sr:Портал:Информатика]]
[[vi:Wikipedia:Trang chính Computer]]
[[zh:Wikipedia:主题/电脑和信息技术]]</text>
    </revision>
  </page>
  <page>
    <title>List of computer science fields</title>
    <id>3783328</id>
    <revision>
      <id>319323467</id>
      <timestamp>2009-10-11T23:16:10Z</timestamp>
      <contributor>
        <username>Miym</username>
        <id>8436643</id>
      </contributor>
      <minor/>
      <comment>cat key</comment>
      <text xml:space="preserve">{{Orphan|date=February 2009}}
'''[[Computer science]]''' has a number of major sub-fields which can be classified by a number of means (for example the [http://www.acm.org/class/1998/overview.html ACM classification system]).

; [[Algorithms]]
: formal processes used for computation, and the efficiency of these processes
; [[Application software|Applications]]
: design and development software for everyday use
; [[Artificial intelligence]]
: implementation and study of systems that exhibit (either behaviourally or seemingly) an autonomous intelligence or behaviour of their own, sometimes inspired by the characteristics of living beings. Computer science is closely tied with AI, as software and computers are primary tools for the development and progression of artificial intelligence
; [[Compiler]]s
: ways of efficiently translating algorithms from one form (usually a programming language) to another
; [[Computational complexity theory]]
: fundamental bounds (esp. time and storage space) on computations
; [[Computer programming]]
: the act of writing algorithms in a [[programming language]]
; [[Computer graphics]]
: algorithms both for generating visual images synthetically and for integrating or altering visual and spatial information sampled from the real world
; [[Computer vision]]
: algorithms for extracting three dimensional objects from a two dimensional picture
; [[Cryptography]]
: algorithms for protecting private data, including [[encryption]]
; [[Data mining]]
: the process of sorting through large amounts of data and picking out relevant information.; closely related to [[information retrieval]]
; [[Data structure]]s
: the organization and storage of data
; [[Computer networking|Networking]]
: algorithms and protocols for reliably communicating data across long distances, often including [[error correction]]
; [[Operating system]]s
: systems for managing computer programs and data structures
; [[Programming language]]s
: formal languages for expressing algorithms and the properties of these languages
; [[Robotics]]
: algorithms for controlling the behavior of robots
; [[Scientific computing]]
: algorithms for use in the sciences, especially (but not exclusively) [[biology]] (as in [[bioinformatics]]), [[physics]], and [[chemistry]]
; [[Software engineering]]
: the process of designing, developing, and testing programs
; [[Steganography]]
: algorithms for covertly hiding data in seemingly unrelated documents, such as graphics
; [[Type Theory]]
: formal analysis of the types of data, and the use of these types to understand properties of programs, especially program safety

[[Category:Computer science|*]]
[[Category:Computer lists|Computer science fields]]
[[Category:Indexes of articles|Computer science fields]]

[[tr:Bilgisayar bilimi alanları listesi]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Algorithms</title>
    <id>691136</id>
    <revision>
      <id>319202019</id>
      <timestamp>2009-10-11T09:59:08Z</timestamp>
      <contributor>
        <username>Chaojoker</username>
        <id>510326</id>
      </contributor>
      <minor/>
      <comment>+hy</comment>
      <text xml:space="preserve">{{catdiffuse}}
{{Commons cat|Algorithms}}
{{catmore|Algorithm}}
An '''algorithm''', broadly defined, is an understandable and finite set of instructions for accomplishing some task which, given a defined set of inputs, will result in some recognisable end-state (contrast with [[heuristic]]). Algorithms often have steps that repeat ([[iteration|iterate]]) or require decisions (such as [[Boolean logic|logic]] or [[inequality|comparison]]) until the task is completed.

[[Category:Applied mathematics]]
[[Category:Computer science]]
[[Category:Computer programming]]

[[af:Kategorie:Algoritmes]]
[[ar:تصنيف:خوارزميات]]
[[an:Categoría:Algorismos]]
[[bar:Kategorie:Algorithmus]]
[[bs:Kategorija:Algoritmi]]
[[bg:Категория:Алгоритми]]
[[ca:Categoria:Algorismes]]
[[cs:Kategorie:Algoritmy]]
[[de:Kategorie:Algorithmus]]
[[et:Kategooria:Algoritm]]
[[el:Κατηγορία:Αλγόριθμοι]]
[[es:Categoría:Algoritmos]]
[[eo:Kategorio:Algoritmoj]]
[[eu:Kategoria:Algoritmoak]]
[[fa:رده:الگوریتم‌ها]]
[[fr:Catégorie:Algorithme]]
[[gl:Categoría:Algoritmos]]
[[hy:Կատեգորիա:Ալգորիթմներ]]
[[ko:분류:알고리즘]]
[[id:Kategori:Algoritma]]
[[is:Flokkur:Reiknirit]]
[[it:Categoria:Algoritmi]]
[[he:קטגוריה:אלגוריתמים]]
[[ka:კატეგორია:ალგორითმები]]
[[lv:Kategorija:Algoritmi]]
[[lt:Kategorija:Algoritmai]]
[[hu:Kategória:Algoritmusok]]
[[mk:Категорија:Алгоритми]]
[[ml:വര്‍ഗ്ഗം:അല്‍ഗൊരിതങ്ങള്‍]]
[[nl:Categorie:Algoritme]]
[[ja:Category:アルゴリズム]]
[[no:Kategori:Algoritmer]]
[[nn:Kategori:Algoritmar]]
[[pl:Kategoria:Algorytmy]]
[[pt:Categoria:Algoritmos]]
[[ro:Categorie:Algoritmi]]
[[ru:Категория:Алгоритмы]]
[[simple:Category:Algorithms]]
[[sk:Kategória:Algoritmy]]
[[sl:Kategorija:Algoritmi]]
[[sr:Категорија:Алгоритми]]
[[su:Kategori:Algoritma]]
[[fi:Luokka:Algoritmit]]
[[sv:Kategori:Algoritmer]]
[[th:หมวดหมู่:ขั้นตอนวิธี]]
[[tr:Kategori:Algoritmalar]]
[[uk:Категорія:Алгоритми]]
[[vo:Klad:Lalgorits]]
[[zh-classical:Category:算法]]
[[zh:Category:算法]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Artificial intelligence</title>
    <id>700355</id>
    <revision>
      <id>319203717</id>
      <timestamp>2009-10-11T10:17:00Z</timestamp>
      <contributor>
        <username>Chaojoker</username>
        <id>510326</id>
      </contributor>
      <minor/>
      <comment>+hy</comment>
      <text xml:space="preserve">{{portal}}
{{catmore}}
{{Commons cat|Artificial intelligence}}
{{Infobox catalog
|DDC = 
|LCC =
|UDC = 0 004.8
}}

[[Category:Intelligence by type]]
[[Category:Computer science]]
[[Category:Cognitive science]]
[[Category:Cybernetics]]
[[Category:Neuroscience]]
[[Category:Interdisciplinary fields]]
[[Category:Futurology]]
[[Category:Philosophy of mind]]

[[ar:تصنيف:ذكاء اصطناعي]]
[[an:Categoría:Intelichenzia artifizial]]
[[zh-min-nan:Category:Jîn-kang tì-lêng]]
[[be-x-old:Катэгорыя:Штучны інтэлект]]
[[bar:Kategorie:Künstliche Intelligenz]]
[[bs:Kategorija:Vještačka inteligencija]]
[[bg:Категория:Изкуствен интелект]]
[[ca:Categoria:Intel·ligència artificial]]
[[cs:Kategorie:Umělá inteligence]]
[[da:Kategori:Kunstig intelligens]]
[[de:Kategorie:Künstliche Intelligenz]]
[[el:Κατηγορία:Τεχνητή νοημοσύνη]]
[[es:Categoría:Inteligencia artificial]]
[[eu:Kategoria:Adimen artifiziala]]
[[fa:رده:هوش مصنوعی]]
[[fr:Catégorie:Intelligence artificielle]]
[[gl:Categoría:Intelixencia artificial]]
[[ko:분류:인공지능]]
[[hr:Kategorija:Umjetna inteligencija]]
[[hy:Կատեգորիա:Արհեստական բանականություն]]
[[id:Kategori:Kecerdasan buatan]]
[[ia:Categoria:Intelligentia artificial]]
[[is:Flokkur:Gervigreind]]
[[it:Categoria:Intelligenza artificiale]]
[[he:קטגוריה:בינה מלאכותית]]
[[lv:Kategorija:Mākslīgais intelekts]]
[[lt:Kategorija:Dirbtinis intelektas]]
[[hu:Kategória:Mesterséges intelligencia]]
[[mk:Категорија:Вештачка интелигенција]]
[[ms:Kategori:Kecerdasan buatan]]
[[nl:Categorie:Kunstmatige intelligentie]]
[[ja:Category:人工知能]]
[[pl:Kategoria:Sztuczna inteligencja]]
[[pt:Categoria:Inteligência artificial]]
[[ro:Categorie:Inteligenţă artificială]]
[[ru:Категория:Искусственный интеллект]]
[[sk:Kategória:Umelá inteligencia]]
[[sl:Kategorija:Umetna inteligenca]]
[[fi:Luokka:Tekoäly]]
[[sv:Kategori:Artificiell intelligens]]
[[th:หมวดหมู่:ปัญญาประดิษฐ์]]
[[tr:Kategori:Yapay zeka]]
[[uk:Категорія:Штучний інтелект]]
[[zh-yue:Category:人工智能]]
[[zh:Category:人工智能]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Computational science</title>
    <id>1903566</id>
    <revision>
      <id>312531381</id>
      <timestamp>2009-09-08T04:50:29Z</timestamp>
      <contributor>
        <username>Chobot</username>
        <id>259798</id>
      </contributor>
      <minor/>
      <comment>robot Adding: [[ko:분류:계산과학]] Modifying: [[fa:رده:علوم محاسباتی]]</comment>
      <text xml:space="preserve">{{catmore}}

&lt;!-- [[Category:Science]] redundant --&gt;
{{Commons cat|Numerical analysis}}

[[Category:Applied mathematics]]
[[Category:Computer science]]
[[Category:Science software]]

[[ar:تصنيف:علوم حاسوبية]]
[[bs:Kategorija:Nauka o izračunavanju]]
[[fa:رده:علوم محاسباتی]]
[[ko:분류:계산과학]]
[[id:Kategori:Ilmu komputasi]]
[[ja:Category:計算科学]]
[[pt:Categoria:Computação científica]]
[[fi:Luokka:Laskennallinen tiede]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Computer architecture</title>
    <id>869984</id>
    <revision>
      <id>289600758</id>
      <timestamp>2009-05-13T02:38:22Z</timestamp>
      <contributor>
        <username>Shooke</username>
        <id>4642278</id>
      </contributor>
      <text xml:space="preserve">{{Infobox catalog
|DDC = 
|LCC =
|UDC = 0 004.2 
}}
{{catmore}}

==See also:==
*[[:Category:Computer hardware]] for articles about computer electronic components, buses, clock signals, memory, motherboards, ...
*[[Fault-tolerant design]] and [[Fault-tolerant system]]

[[Category:Computer engineering]]
[[Category:Computing|Architecture]]
[[Category:Computer science]]

[[ca:Categoria:Arquitectura de computadors]]
[[cs:Kategorie:Architektura počítače]]
[[de:Kategorie:Rechnerarchitektur]]
[[es:Categoría:Arquitectura de computadoras]]
[[eo:Kategorio:Komputila arkitekturo]]
[[eu:Kategoria:Konputagailuaren arkitektura]]
[[fr:Catégorie:Architecture informatique]]
[[ga:Catagóir:Ailtireacht ríomhairí]]
[[ko:분류:컴퓨터 구조]]
[[hr:Kategorija:Arhitektura računala]]
[[id:Kategori:Arsitektur komputer]]
[[it:Categoria:Architettura dei calcolatori]]
[[lv:Kategorija:Datoru arhitektūra]]
[[ms:Kategori:Seni bina komputer]]
[[nl:Categorie:Computerarchitectuur]]
[[ja:Category:コンピュータアーキテクチャ]]
[[no:Kategori:Dataarkitektur]]
[[nn:Kategori:Dataarkitektur]]
[[pl:Kategoria:Architektura komputerów]]
[[pt:Categoria:Arquitetura de computadores]]
[[ru:Категория:Архитектура компьютеров]]
[[sk:Kategória:Architektúra počítača]]
[[sr:Категорија:Архитектура рачунара]]
[[sv:Kategori:Datorarkitekturer]]
[[th:หมวดหมู่:สถาปัตยกรรมคอมพิวเตอร์]]
[[tr:Kategori:Bilgisayar mimarisi]]
[[uk:Категорія:Архітектура ЕОМ]]
[[vi:Thể loại:Kiến trúc máy tính]]
[[zh:Category:電腦架構]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Concurrency</title>
    <id>4234681</id>
    <revision>
      <id>282816082</id>
      <timestamp>2009-04-09T18:24:22Z</timestamp>
      <contributor>
        <username>Animist</username>
        <id>8183005</id>
      </contributor>
      <comment>Deleted obsolete interwiki [[:ru:Категория:Параллелизм]]</comment>
      <text xml:space="preserve">[[Concurrency (computer science)|Concurrency]] is a property of systems which consist of [[Computation|computations]] that execute overlapped in time, and which may permit the sharing of common resources between those overlapped computations.

{{catmore|Concurrency (computer science)}}

[[Category:Computer science]]
[[Category:Operating system technology]]

[[ja:Category:並行性]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Data structures</title>
    <id>691150</id>
    <revision>
      <id>326990778</id>
      <timestamp>2009-11-20T20:44:07Z</timestamp>
      <contributor>
        <username>TXiKiBoT</username>
        <id>3171782</id>
      </contributor>
      <minor/>
      <comment>robot Adding: [[ca:Categoria:Estructura de dades]]</comment>
      <text xml:space="preserve">{{catdiffuse}}

{{Commons cat|Data structures}}

In [[computer science]], a '''[[data structure]]''' is a way of storing [[data]] in a computer so that it can be used efficiently. Often a carefully chosen data structure will allow a more efficient [[algorithm]] to be used. The choice of the data structure must begin from the choice of an [[abstract data structure]].

{{catmore}}

[[Category:Computer data|Structures]]
[[Category:Data management|Structures]]
[[Category:Computer programming]]
[[Category:Computer science]]

[[ar:تصنيف:بنى البيانات]]
[[be-x-old:Катэгорыя:Структуры дадзеных]]
[[bs:Kategorija:Strukture podataka]]
[[ca:Categoria:Estructura de dades]]
[[cs:Kategorie:Datové struktury]]
[[da:Kategori:Datastrukturer]]
[[de:Kategorie:Datenstruktur]]
[[es:Categoría:Estructura de datos]]
[[eo:Kategorio:Datumstrukturoj]]
[[fa:رده:ساختمان داده]]
[[fr:Catégorie:Structure de données]]
[[ko:분류:자료 구조]]
[[id:Kategori:Struktur data]]
[[is:Flokkur:Gagnagrindur]]
[[it:Categoria:Strutture dati]]
[[he:קטגוריה:מבני נתונים]]
[[lt:Kategorija:Duomenų struktūros]]
[[hu:Kategória:Adatszerkezetek]]
[[ml:വര്‍ഗ്ഗം:ഡാറ്റാ സ്ട്രക്‌ച്ചറുകള്‍]]
[[ms:Kategori:Struktur data]]
[[nl:Categorie:Datastructuur]]
[[ja:Category:データ構造]]
[[pl:Kategoria:Struktury danych]]
[[pt:Categoria:Estruturas de dados]]
[[ro:Categorie:Structuri de date]]
[[ru:Категория:Структуры данных]]
[[sk:Kategória:Údajové štruktúry]]
[[fi:Luokka:Tietorakenteet]]
[[sv:Kategori:Datastrukturer]]
[[uk:Категорія:Структури даних]]
[[zh:Category:数据结构]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Databases</title>
    <id>2276471</id>
    <revision>
      <id>326300395</id>
      <timestamp>2009-11-17T05:45:47Z</timestamp>
      <contributor>
        <username>Hmains</username>
        <id>508734</id>
      </contributor>
      <comment>not really right category</comment>
      <text xml:space="preserve">{{catdiffuse}}
{{catmore}}
{{Commons cat|Database}}

[[Category:Computer data]]
[[Category:Computer science]]
[[Category:Data management]]
[[Category:Digital libraries]]

[[be:Катэгорыя:Базы дадзеных]]
[[bg:Категория:Бази данни]]
[[ca:Categoria:Bases de dades]]
[[cs:Kategorie:Databáze]]
[[da:Kategori:Databaser]]
[[de:Kategorie:Datenbank]]
[[el:Κατηγορία:Βάσεις δεδομένων]]
[[es:Categoría:Bases de datos]]
[[eo:Kategorio:Datumbazoj]]
[[eu:Kategoria:Datu-baseak]]
[[fa:رده:پایگاه داده‌ها]]
[[fr:Catégorie:Base de données]]
[[ko:분류:데이터베이스]]
[[hr:Kategorija:Baze podataka]]
[[id:Kategori:Basis data]]
[[ia:Categoria:Base de datos]]
[[is:Flokkur:Tölvunarfræði]]
[[it:Categoria:Database]]
[[he:קטגוריה:מאגרי מידע]]
[[lv:Kategorija:Datu bāzes]]
[[lt:Kategorija:Duomenų bazės]]
[[hu:Kategória:Számítógéptudomány]]
[[mk:Категорија:Бази на податоци]]
[[ja:Category:データベース]]
[[no:Kategori:Databaser]]
[[pl:Kategoria:Bazy danych]]
[[pt:Categoria:Bancos de dados]]
[[ru:Категория:Базы данных]]
[[simple:Category:Databases]]
[[sk:Kategória:Databázy]]
[[fi:Luokka:Tietojenkäsittelytiede]]
[[sv:Kategori:Databaser]]
[[th:หมวดหมู่:ฐานข้อมูล]]
[[tr:Kategori:Veri tabanları]]
[[uk:Категорія:Бази даних]]
[[vi:Thể loại:Cơ sở dữ liệu]]
[[zh-yue:Category:電腦科學]]
[[zh:Category:数据库]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Events (computing)</title>
    <id>16072179</id>
    <revision>
      <id>230399921</id>
      <timestamp>2008-08-07T13:16:43Z</timestamp>
      <contributor>
        <username>Lambiam</username>
        <id>745100</id>
      </contributor>
      <comment>add Category:Computer science</comment>
      <text xml:space="preserve">The category of event processing describes a field within computer science.

Systems which are predominantly processing data as events are often considered to be event processing systems. This differs from traditional data processing systems which mainly process stored historical data.

[[Category:Computer science]]
[[Category:Information systems]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Computer graphics</title>
    <id>735771</id>
    <revision>
      <id>321574863</id>
      <timestamp>2009-10-23T14:09:18Z</timestamp>
      <contributor>
        <username>Idioma-bot</username>
        <id>2964546</id>
      </contributor>
      <minor/>
      <comment>robot Adding: [[lt:Kategorija:Kompiuterinė grafika]]</comment>
      <text xml:space="preserve">{{Commons cat|Computer graphics}}
{{catmore}}

'''[[Computer graphics]]''' is the field of visual computing, where one utilizes computers both to generate visual images synthetically and to integrate or alter visual and spatial information sampled from the real world.

[[Category:Computer science|Graphics]]
[[Category:Scientific modeling]]
[[Category:Graphics]]

[[ar:تصنيف:رسوميات الحاسوب]]
[[be:Катэгорыя:Камп'ютарная графіка]]
[[be-x-old:Катэгорыя:Кампутарная графіка]]
[[bar:Kategorie:Computergrafik]]
[[bs:Kategorija:Računarska grafika]]
[[bg:Категория:Компютърна графика]]
[[ca:Categoria:Infografia]]
[[cs:Kategorie:Počítačová grafika]]
[[cy:Categori:Graffeg gyfrifiadurol]]
[[de:Kategorie:Computergrafik]]
[[es:Categoría:Computación gráfica]]
[[eo:Kategorio:Komputila grafiko]]
[[fa:رده:گرافیک رایانه‌ای]]
[[fr:Catégorie:Imagerie numérique]]
[[ko:분류:컴퓨터 그래픽스]]
[[hr:Kategorija:Računalna grafika]]
[[id:Kategori:Komputer grafis]]
[[it:Categoria:Computer grafica]]
[[he:קטגוריה:גרפיקה ממוחשבת]]
[[ka:კატეგორია:კომპიუტერული გრაფიკა]]
[[lv:Kategorija:Datorgrafika]]
[[lb:Kategorie:Computergrafik]]
[[lt:Kategorija:Kompiuterinė grafika]]
[[mk:Категорија:Компјутерска графика]]
[[nl:Categorie:Computergraphics]]
[[ja:Category:コンピュータグラフィックス]]
[[no:Kategori:Datagrafikk]]
[[nn:Kategori:Datagrafikk]]
[[pl:Kategoria:Grafika komputerowa]]
[[pt:Categoria:Computação gráfica]]
[[ru:Категория:Компьютерная графика]]
[[simple:Category:Computer graphics]]
[[sk:Kategória:Počítačová grafika]]
[[sl:Kategorija:Računalniška grafika]]
[[sr:Категорија:Рачунарска графика]]
[[fi:Luokka:Tietokonegrafiikka]]
[[sv:Kategori:Datorgrafik]]
[[th:หมวดหมู่:คอมพิวเตอร์กราฟิกส์]]
[[tr:Kategori:Bilgisayar grafiği]]
[[uk:Категорія:Комп'ютерна графіка]]
[[vi:Thể loại:Đồ họa máy tính]]
[[zh:Category:计算机图形学]]</text>
    </revision>
  </page>
  <page>
    <title>User:Hammer hunan</title>
    <id>24977506</id>
    <revision>
      <id>324184802</id>
      <timestamp>2009-11-06T00:23:00Z</timestamp>
      <contributor>
        <ip>188.74.81.218</ip>
      </contributor>
      <comment>typo</comment>
      <text xml:space="preserve">Goal-Driven Learning'''

'''Goal-Driven Learning''' (hereafter GDL) refers to the process of [[reasoner]] (human or machine) system using “the overall goals of an intelligent system”&lt;ref&gt;[http://www.aaai.org/Press/Reports/Symposia/Spring/ss-94-02.php]&lt;/ref&gt; to make decisions about when to learn, what to learn, and how to learn, that is what kind of learning strategies shall be harnessed in a specific circumstance. This reasoning process may happen at any decision stage during the course of learning---for example, when determining what to learn, selecting a bias, pruning the space of theories to be considered, or generating experiments for data gathering.&lt;ref&gt;[http://www.aaai.org/Press/Reports/Symposia/Spring/ss-94-02.php]&lt;/ref&gt; 
Typical GDL system consists of a reasoner or base system that has some performance goals to achieve in some domains, by using meta-reasoning capabilities over a base reasoner, identifying learning goals and devising strategies.&lt;ref&gt;[Jainarayan Radhakrishnan and Santiago Onta˜non and Ashwin Ram, Goal-Driven Learning in the GILA Integrated Intelligence Architecture, available at http://ijcai.org/papers09/Papers/IJCAI09-203.pdf]
&lt;/ref&gt;  The main motive of researching GDL is to analyze and clarify the mechanism of human’s learning to solve problems in an external world of rich and seemingly irrelevant information and transplant or imitate it onto the machine learning, which is largely in the meaning of computational arguments.
'''Framework and main components of GDL process'''
The purpose of establishing a framework of GDL process is to better understand GDL and offer a “unified view of the diverse research results on goal-driven process&quot;&lt;ref&gt;[ Ashwin Ram and David B. Leake. Goal-Driven Learning. MIT Press, 1995,8.]&lt;/ref&gt;. The framework shall start from the performance tasks that the reasoner is attempting to achieve in the real world. The performance tasks are the beginning motivation and general axis of the reasoner, and also determine the direction of learning. The performance tasks can be decomposed into subtasks. Under the leadership and guide of the performance tasks and subtasks the reasoner develops task goals to fulfill the performance. As the tasks and subtasks are performed, the reasoner formulates explicit learning goals to perform types of learning.&lt;ref&gt;[Ibid.]&lt;/ref&gt;  The main functions of learning goals are to focus the reasoner’s attention, allocate the reasoning resources and efforts, etc.
The key point of the framework of GDL process is the formulating of the learning goal triggered by the tasks. In most cases, because of the deficiency of the reasoner’s knowledge capacity, the reasoner can not identify or achieve the performance tasks at the different stages of achieving the tasks, which could be called reasoning failures. There are several kinds of reasoning failures including expectation failures, retrieval failures, and knowledge failures. The failures often come into being in the course of selection and application of reasoning methods. The reasoner keeps reasoning trace and detects the failures by evaluation of processing. Then the reasoner analyzes the failures and gives rise to learning goals. 
After the learning goals are generated, the next step is to pursue them.&lt;ref&gt;[Ibid 12.]&lt;/ref&gt; Just as task goals are achieved through a planning process using available methods for reasoning and action, learning goals are achieved through a knowledge planning process using available learning methods or strategies.&lt;ref&gt;[Hunter, L.E.(1990). Planning to Learn. In Processing of the Twelfth Annual Conference of the Cognitive Science Science Society, page261-276, Boston, MA.
]&lt;/ref&gt; 
A typical architecture of a GDL system is composed of two parts, the reasoner and the meta-reasoner.&lt;ref&gt;[n3]&lt;/ref&gt; The reasoner is the basic and main part of a GDL system, which carries and processes the task goals with its performance system. The processing action of the performance system is recorded as reasoning trace and sent to the meta-reasoner for trace evaluation. The main function of the trace evaluation is to identify the reasoning failure of the reasoner, which is due to the reasoner’s deficiency of knowledge. After this, the meta-reasoner begins to formulate learning goals, with which the meta-reasoner could start the process of learning strategy selection. The result of the selection is that the meta-reasoner offers learning strategies for the performance system of the reasoner. With these learning strategies, the reasoner may solve the performance failures. After application of these strategies, if the performance failures are successfully solved, the task goals will be achieved. If not, new performance failures are identified in the reasoning trace and the process will begin another cycle.

'''Understand learning'''
[[Learning]] is one of the most complex activities of human being. Figuring out the process of learning and imitating it onto the machine or computer so as to confer the ability of learning to the machine are among the most challenging tasks of modern [[artificial intelligence]]. The fundamental principle of GDL is that learning is largely an active and strategic process in which the learner, human or machine, attempts to identify and satisfy its information needs in the context of its tasks and goals, its prior knowledge, its capabilities, and environmental opportunities for learning.&lt;ref&gt;[n4xi]&lt;/ref&gt; 
Learning is the only important means for the agent to live when the designer has incomplete knowledge of the environment; thus learning provides autonomy in the sense and also provides a good way to build high-performance systems by giving experience in the application domain.&lt;ref&gt;[Stuart Russell, Peter Norvig, Artificial Intelligence A modern Approach (Alan Apl1995)523]&lt;/ref&gt; By learning, the reasoner can actively adapt to the circumstances where it lives and perform different tasks to show its values.

'''Focus on goals'''
The central idea in GDL is that the value of learning lies in how well the learning contributes to achieving the learner’s goals.&lt;ref&gt;[n4 1]&lt;/ref&gt; So the learner’s goals play a determining role in the GDL system. A learning goal is a description of a target knowledge system.&lt;ref&gt;[Maarten W. van Someren, Towards Automating Goal-driven Learning, available at http://www.ecmlpkdd2007.org/CD/workshops/PlanLearn/WS_PlanLearn_p4/WS_PlanLearn_p4.pdf]&lt;/ref&gt; The learner’s goals are triggered or initiated by the needs of working or living in the specific environment, which are called the tasks performed by the reasoner. From the root viewpoint, the learning goals are formulated through the knowledge systems by integrating the environmental factors. By formulating learning goals, the reasoner will schedule learning tasks, select learning algorithms, choose a learning bias, and generate experiments for data processing.
According to the function, the goals can be classified into different levels. The highest goal is the task goal, which is the main task and the aim of the learning process. Then the sub- goals are formed by decomposing the task goal in the course of reasoning performance.

'''Applications of GDL in a legal expert system'''
GDL has now been widely applied in [[psychology]], education, and [[airspace]] to help the intelligent systems or the learners to make decisions about what and how to learn. Here the application in a legal expert system will be specifically discussed.  
A legal expert system can be devised for three main types of users: legal professionals including lawyers and their paralegals, companies that have legal needs, and the general public. Legal expert systems, esp. those designed for legal professionals, shall have a largely untapped ability to teach.&lt;ref&gt;[John Zeleznikow, Dan Hunter, Building Intelligence Legal Information Systems (Kluwer Law and Taxation, Deventer1994) 71.]&lt;/ref&gt; The system shall respond to and explain consultations in various circumstances at each stage of the legal field. Therefore, active not passive learning is essentially important for a legal expert system.
A legal [[expert system]] that performs different tasks within the legal domain shall have 3 components: (1) it should have almost the same knowledge at its disposal as a human lawyer; (2) the presentation of the knowledge should be as isomorphic as possible; (3) the knowledge can be used for different kinds of situations, in different sequences an din different combinations.&lt;ref&gt;[ Anja Oskamp, Model for knowledge and legal expert systems, in Artificial Intelligence and Law, An International Journal, V1[1992] 247.
]&lt;/ref&gt; Those are the main performance tasks of a legal expert system. The performance tasks drive a legal expert system to learn written legal resources, which can be divided into two categories of the main sub-task goals. One is legal knowledge sources, including legislative documents, [[case law]], and other legal writings (legal explanation, papers of legal scholars, and guidelines of professional society). Different resources need proper learning requirements. For example, identifying the efficiency of different legislative documents which include a lot of statutory documents made by different agencies is the top priority of a legal expert system. Another example is the case law that is composed of millions of case judgments for hundreds years. The legal expert system shall select the exact articles of the documents and the specific paragraph of the judgments for the arguments. The other category of subtask goal is knowledge application, which needs reasoning and considering more like a human brain. The most important goal in expert system work is to attain the high level of performance as a human expert performs the same task with high quality results in minimal times, usually by taking advantage of tricks of the trade and high-level inference patterns (hunches) from years of experience at a given task.&lt;ref&gt;[ Hayes- Roth, F., Waterman,D.A.&amp;Lenat, D.B.(eds.).1983.Building  Expert Systems. Reading, Ma:Addison-Wesley, 43]&lt;/ref&gt; The knowledge that is used for applying the law can be divided in five separate sources: legislation, case law, legal literature, expert knowledge and legal metaknowledge. 
With the knowledge and the sub-task goals discussed above, a legal expert system can formulate a set of learning goals and address whether to learn, what to learn and when to learn. As for the question of how to learn, the system needs a meta-reasoner to evaluate the performance trace and select the learning strategies. The exact legal problem raised in a special context will examine the efficiency of the learning strategies. If the problem is solved, there will be no performance failure and the learning goals and strategies of the legal expert system are right for the external world. If not, the performance failure is detected and the learning goals and strategies have to be evaluated in the performance system again and a new GDL processing cycle shall begin.

  ==References==
{{Reflist}}


[[category:Science]]
[[category:Applied sciences]]
[[category:Computer science]]
[[category:Artificial intelligence]]</text>
    </revision>
  </page>
  <page>
    <title>History of computer science</title>
    <id>3271413</id>
    <revision>
      <id>327327373</id>
      <timestamp>2009-11-22T18:54:16Z</timestamp>
      <contributor>
        <username>Miym</username>
        <id>8436643</id>
      </contributor>
      <minor/>
      <comment>[[WP:UNDO|Undid]] revision 327282226 by [[Special:Contributions/41.218.199.228|41.218.199.228]] ([[User talk:41.218.199.228|talk]])</comment>
      <text xml:space="preserve">{{history of computing}}
The '''history of computer science''' began long before the modern discipline of [[computer science]] that emerged in the twentieth century, and hinted at in the centuries prior. The progression, from mechanical inventions and mathematical theories towards the modern concepts and machines, formed a major academic field and the basis of a massive worldwide industry.&lt;ref&gt;[http://www.cs.uwaterloo.ca/~shallit/Courses/134/history.html History of Computer Science]&lt;/ref&gt;

==Early history==
===Early computation===
{{main|History of computing|Timeline of computing 2400 BC–1949}}

The earliest known tool for use in computation was the [[abacus]], and it was thought to have been invented in [[Babylon]] circa [[2400 BCE]]. Its original style of usage was by lines drawn in sand with pebbles. This was the first known computer and most advanced system of calculation known to date - preceding Greek methods by 2,000 years. Abaci of a more modern design are still used as calculation tools today.

In [[1115 BCE]], the [[South Pointing Chariot]] was invented in [[ancient China]]. It was the first known [[gear]]ed mechanism to use a [[differential gear]], which was later used in [[analog computer]]s. The [[China|Chinese]] also invented a more sophisticated abacus from around the [[2nd century BCE]], known as the [[Chinese abacus]].

In the [[5th century BCE]] in [[History of India|ancient India]], the [[grammarian]] [[Pāṇini]] formulated the [[grammar]] of [[Sanskrit]] in 3959 rules known as the [[Ashtadhyayi]] which was highly systematized and technical. Panini used metarules, [[transformation]]s and [[recursion]]s with such sophistication that his grammar had the [[computing]] power equivalent to a [[Turing machine]]. Between [[200 BCE]] and [[400|400 CE]], [[Indian mathematics#Jaina Mathematics .28400 BCE - 200 CE.29|Jaina mathematicians]] in India invented the [[logarithm]]. From the [[13th century]], logarithmic tables were produced by [[Islamic mathematics|Muslim mathematicians]].

The [[Antikythera mechanism]] is believed to be the earliest known mechanical analog computer.&lt;ref&gt;[http://www.antikythera-mechanism.gr/project/general/the-project.html ''The Antikythera Mechanism Research Project''], The Antikythera Mechanism Research Project. Retrieved 2007-07-01&lt;/ref&gt;  It was designed to calculate astronomical positions. It was discovered in 1901 in the [[Antikythera]] wreck off the [[Greece|Greek]] island of Antikythera, between Kythera and Crete, and has been dated to ''circa'' 100 BC.

Mechanical analog computer devices appeared again a thousand years later in the [[Islamic Golden Age|medieval Islamic world]] and were developed by [[Islamic astronomy|Muslim astronomers]], such as the [[equatorium]] by [[Abū Ishāq Ibrāhīm al-Zarqālī|Arzachel]],&lt;ref&gt;{{Harvard reference |last=Hassan |first=Ahmad Y. |authorlink=Ahmad Y Hassan |url=http://www.history-science-technology.com/Articles/articles%2071.htm |title=Transfer Of Islamic Technology To The West, Part II: Transmission Of Islamic Engineering |accessdate=2008-01-22}}&lt;/ref&gt; the mechanical geared [[astrolabe]] by [[Abū Rayhān al-Bīrūnī]],&lt;ref name=usc&gt;{{cite web|url=http://www.usc.edu/dept/MSA/introduction/woi_knowledge.html|title=Islam, Knowledge, and Science|publisher=[[University of Southern California]]|accessdate=2008-01-22}}&lt;/ref&gt; and the [[torquetum]] by [[Jabir ibn Aflah]].&lt;ref&gt;{{citation|first=R. P.|last=Lorch|title=The Astronomical Instruments of Jabir ibn Aflah and the Torquetum|journal=[[Centaurus (journal)|Centaurus]]|volume=20|issue=1|year=1976|pages=11-34}}&lt;/ref&gt; The first [[Computer programming|programmable]] machines were also invented by [[Inventions in the Islamic world|Muslim engineers]], such as the [[Automaton|automatic]] [[flute]] player by the [[Banū Mūsā]] brothers&lt;ref name=Koetsier&gt;Teun Koetsier (2001). &quot;On the prehistory of programmable machines: musical automata, looms, calculators&quot;, ''Mechanism and Machine theory'' '''36''', p. 590-591.&lt;/ref&gt; and the [[humanoid robot]]s by [[Al-Jazari]].&lt;ref&gt;[http://www.shef.ac.uk/marcoms/eview/articles58/robot.html A 13th Century Programmable Robot], [[University of Sheffield]]&lt;/ref&gt; [[Islamic mathematics|Muslim mathematicians]] also made important advances in [[cryptography]], such as the development of [[cryptanalysis]] and [[frequency analysis]] by [[Al-Kindi|Alkindus]].&lt;ref&gt;Simon Singh, ''The Code Book'', pp. 14-20&lt;/ref&gt;&lt;ref&gt;{{cite web |url=http://www.muslimheritage.com/topics/default.cfm?ArticleID=372 |title= Al-Kindi, Cryptgraphy, Codebreaking and Ciphers |accessdate=2007-01-12 |format= HTML |work= }}&lt;/ref&gt;

When [[John Napier]] discovered logarithms for computational purposes in the early [[17th century]], there followed a period of considerable progress by inventors and scientists in making calculating tools. Around 1640, [[Blaise Pascal]], a leading French mathematician, constructed the first mechanical adding device&lt;ref&gt;[http://www.knobblycrab.co.uk/computer-history.html Short history of the computer]&lt;/ref&gt; based on a design described by [[Ancient Greece|Greek]] mathematician [[Hero of Alexandria]].&lt;ref&gt;[http://lecture.eingang.org/pascaline.html History of Computing Science: The First Mechanical Calculator]&lt;/ref&gt;

None of the early computational devices were really [[computer]]s in the modern sense, and it took considerable advancement in mathematics and theory before the first modern computers could be designed.

===Algorithms===

In the [[7th century]], [[Indian mathematics|Indian mathematician]] [[Brahmagupta]] gave the first explanation of the [[Hindu-Arabic numeral system]] and the use of [[0 (number)|zero]] as both a [[placeholder]] and a [[decimal digit]].

Approximately around the year [[825]], Persian mathematician [[Al-Khwarizmi]] wrote a book, ''On the Calculation with Hindu Numerals'', that was principally responsible for the diffusion of the [[Hindu-Arabic numeral system|Indian system of numeration]] in the [[Middle East]] and then [[Europe]]. Around the [[12th century]], there was translation of this book written into [[Latin]]: ''Algoritmi de numero Indorum''. These books presented newer concepts to perform a series of steps in order to accomplish a task such as the systematic application of arithmetic to algebra. By derivation from his name, we have the term [[algorithm]].

===Binary logic===
Around the [[3rd century BC]], Indian mathematician [[Pingala]] discovered the [[binary numeral system]]. In this system, still used today in all modern computers, a sequence of [[1 (number)|ones]] and zeros can represent any number.

In [[1703]], [[Gottfried Leibnitz]] developed [[logic]] in a formal, mathematical sense with his writings on the binary numeral system. In his system, the ones and zeros also represent ''true'' and ''false'' values or ''on'' and ''off'' states. But it took more than a century before [[George Boole]] published his [[Boolean algebra (logic)|Boolean algebra]] in [[1854]] with a complete system that allowed computational processes to be mathematically modeled.

By this time, the first mechanical devices driven by a binary pattern had been invented. The [[industrial revolution]] had driven forward the mechanization of many tasks, and this included [[weaving]]. [[Punch cards]] controlled [[Joseph Marie Jacquard]]'s loom in [[1801]], where a hole punched in the card indicated a binary ''one'' and an unpunched spot indicated a binary ''zero''. Jacquard's loom was far from being a computer, but it did illustrate that machines could be driven by binary systems.

===Birth of computer science===
Before the 1920s, ''computers'' (sometimes ''computors'') were human clerks that performed computations. They were usually under the lead of a physicist. Many thousands of computers were employed in commerce, government, and research establishments. Most of these computers were women, and they were known to have a degree in calculus. Some performed astronomical calculations for calendars.

After the 1920s, the expression ''computing machine'' referred to any machine that performed the work of a human computer, especially those in accordance with effective methods of the [[Church-Turing thesis]]. The thesis states that a mathematical method is effective if it could be set out as a list of instructions able to be followed by a human clerk with paper and pencil, for as long as necessary, and without ingenuity or insight.

Machines that computed with continuous values became known as the ''analog'' kind. They used machinery that represented continuous numeric quantities, like the angle of a shaft rotation or difference in electrical potential.

Digital machinery, in contrast to analog, were able to render a state of a numeric value and store each individual digit. Digital machinery used difference engines or relays before the invention of faster memory devices.

The phrase ''computing machine'' gradually gave away, after the late 1940s, to just ''computer'' as the onset of electronic digital machinery became common. These computers were able to perform the calculations that were performed by the previous human clerks.

Since the values stored by digital machines were not bound to physical properties like analog devices, a logical computer, based on digital equipment, was able to do anything that could be described &quot;purely mechanical.&quot; [[Alan Turing]], known as the Father of Computer Science, invented such a logical computer known as the [[Turing Machine]], which later evolved into the modern computer. These new computers were also able to perform non-numeric computations, like music.

From the time when computational processes were performed by human clerks, the study of computability began a science by being able to make evident which was not explicit into ordinary sense more immediate.

{{See also|Numerical analysis|Mechanism (philosophy)|Philosophy of mathematics|Philosophy of language|Philosophy of mind}}

==Emergence of a discipline==
===The theoretical groundwork===

The mathematical foundations of modern computer science began to be laid by [[Kurt Gödel]] with his [[Gödel's incompleteness theorems|incompleteness theorem]] ([[1931]]). In this theorem, he showed that there were limits to what could be proved and disproved within a [[formal system]]. This led to work by Gödel and others to define and describe these formal systems, including concepts such as [[mu-recursive function]]s and [[lambda-definable functions]].

[[1936]] was a key year for computer science. Alan Turing and [[Alonzo Church]] independently, and also together, introduced the formalization of an [[algorithm]], with limits on what can be computed, and a &quot;purely mechanical&quot; model for computing.

These topics are covered by what is now called the [[Church–Turing thesis]], a hypothesis about the nature of mechanical calculation devices, such as electronic computers. The thesis claims that any calculation that is possible can be performed by an algorithm running on a computer, provided that sufficient time and storage space are available.

Turing also included with the thesis a description of the [[Turing machine]]. A Turing machine has an infinitely long tape and a read/write head that can move along the tape, changing the values along the way. Clearly such a machine could never be built, but nonetheless, the model can simulate the computation of any algorithm which can be performed on a modern computer.

Turing is so important to computer science that his name is also featured on the [[Turing Award]] and the [[Turing test]]. He contributed greatly to British code-breaking successes in the [[Second World War]], and continued to design computers and software through the [[1940s]], but committed suicide  in [[1954]].

At a symposium on large-scale digital machinery in Cambridge, Turing said, &quot;We are trying to build a machine to do all kinds of different things simply by programming rather than by the addition of extra apparatus&quot;.

In 1948, the first practical computer that could run stored programs, based on the Turing machine model, had been built - the [[Manchester Small-Scale Experimental Machine|Manchester Baby]].

In 1950, Britain's [[National Physical Laboratory, UK|National Physical Laboratory]] completed [[Pilot ACE]], a small scale programmable computer, based on Turing's philosophy.

===Shannon and information theory===
Up to and during the 1930s, electrical engineers were able to build electronic circuits to solve mathematical and logic problems, but most did so in an ''ad hoc'' manner, lacking any theoretical rigor.  This changed with [[Claude Shannon|Claude Elwood Shannon]]'s publication of his 1937 master's thesis, [[A Symbolic Analysis of Relay and Switching Circuits]].  While taking an undergraduate philosophy class, Shannon had been exposed to [[George Boole|Boole's]] work, and recognized that it could be used to arrange electromechanical relays (then used in telephone routing switches) to solve logic problems.  This concept, of utilizing the properties of electrical switches to do logic, is the basic concept that underlies all electronic digital computers, and his thesis became the foundation of practical digital circuit design when it became widely known among the electrical engineering community during and after World War II.

Shannon went on to found the field of [[information theory]] with his 1948 paper titled [[A Mathematical Theory of Communication]], which applied [[probability theory]] to the problem of how to best encode the information a sender wants to transmit.  This work is one of the theoretical foundations for many areas of study, including [[data compression]] and [[cryptography]].

===Wiener and Cybernetics===

From experiments with anti-aircraft systems that interpreted radar images to detect enemy planes, [[Norbert Wiener]] coined the term [[cybernetics]] from the Greek word for &quot;steersman.&quot; He published &quot;Cybernetics&quot; in 1948, which influenced [[artificial intelligence]]. Wiener also compared [[computation]], computing machinery, [[computer memory|memory]] devices, and other cognitive similarities with his analysis of brain waves.

==The first computer bug==
{{main|Software bug}}

The first actual computer bug was a moth. It was stuck in between the relays on the Harvard Mark II.[http://www.history.navy.mil/photos/images/h96000/h96566kc.htm]
While the invention of the term 'bug' is often but erroneously attributed to [[Grace Hopper]], a rear admiral in the U.S. Navy, who supposedly logged the &quot;bug&quot; on [[September 9]] [[1945]], most other accounts conflict at least with these details. According to these accounts, the actual date was [[September 9]] [[1947]] when operators filed this 'incident' &amp;mdash; along with the insect and the notation &quot;First actual case of bug being found&quot; (see [[software bug]] for details).

==See also==
* [[Computer science]]
* [[History of computing]]
* [[History of computing hardware]]
* [[Timeline of algorithms]]
* [[List of prominent pioneers in computer science]]
* [[List of computer term etymologies]], the origins of computer science words

==Notes==
{{reflist}}

==References==
* [http://www.cs.uwaterloo.ca/~shallit/Courses/134/history.html  A Very Brief History of Computer Science]
* [http://www.computerhistory.org/ Computer History Museum]
* [http://www.eingang.org/Lecture/ Computers: From the Past to the Present]
* [http://www.history.navy.mil/photos/images/h96000/h96566kc.htm The First &quot;Computer Bug&quot;] at the Online Library of the Naval Historical Center, retrieved [[February 28]] [[2006]]
* [http://www.bitsavers.org/ Bitsavers], an effort to capture, salvage, and archive historical computer software and manuals from minicomputers and mainframes of the 50s, 60s, 70s, and 80s

==External links==
*[http://www.cbi.umn.edu/oh/display.phtml?id=5 Oral history interview with William F. Miller] at [[Charles Babbage Institute]], University of Minnesota, Minneapolis.  Miller contrasts the emergence of computer science at Stanford with developments at Harvard and the University of Pennsylvania.
*[http://www.cbi.umn.edu/oh/display.phtml?id=274 Oral history interview with Alexandra Forsythe] at [[Charles Babbage Institute]], University of Minnesota, Minneapolis.  Forsythe discusses the career of her husband, George Forsythe, who established Stanford University's program in computer science.
*[http://www.cbi.umn.edu/oh/display.phtml?id=146 Oral history interview with Allen Newell] at [[Charles Babbage Institute]], University of Minnesota, Minneapolis.  Newell discusses his entry into computer science, funding for computer science departments and research, the development of the Computer Science Department at Carnegie Mellon University, including the work of [[Alan Perlis|Alan J. Perlis]] and Raj Reddy, and the growth of the computer science and artificial intelligence research communities.  Compares computer science programs at Stanford, MIT, and Carnegie Mellon.
*[http://www.cbi.umn.edu/oh/display.phtml?id=271 Oral history interview with Louis Fein] at [[Charles Babbage Institute]], University of Minnesota, Minneapolis.  Fein discusses establishing computer science as an academic discipline at Stanford Research Institute (SRI) as well as contacts with the University of California—Berkeley, the University of North Carolina, Purdue, International Federation for Information Processing and other institutions.
*[http://www.cbi.umn.edu/oh/display.phtml?id=132 Oral history interview with W. Richards Adrion] at [[Charles Babbage Institute]], University of Minnesota, Minneapolis.  Adrion gives a brief history of theoretical computer science in the United States and NSF's role in funding that area during the 1970s and 1980s.
*[http://www.cbi.umn.edu/oh/display.phtml?id=153 Oral history interview with Bernard A. Galler] at [[Charles Babbage Institute]], University of Minnesota, Minneapolis.  Galler describes the development of computer science at the University of Michigan from the 1950s through the 1980s and discusses his own work in computer science.
*{{sep entry|computing-history|The Modern History of Computing|B. Jack Copeland}}
*http://history-computer.com History of Computers and Computing.


[[Category:Computer science]]
[[Category:History of computing| ]]
[[Category:History of software]]
[[Category:History of mathematics]]

[[cs:Dějiny informatiky]]
[[fa:تاریخ علم رایانه]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Human-based computation</title>
    <id>5751236</id>
    <revision>
      <id>320269223</id>
      <timestamp>2009-10-16T19:31:13Z</timestamp>
      <contributor>
        <username>Miym</username>
        <id>8436643</id>
      </contributor>
      <minor/>
      <comment>cats: TCS -&gt; CS</comment>
      <text xml:space="preserve">In computer science, human-based computation is a technique when a computational process employs humans to perform its function, using human abilities to solve a certain problem or a set of problems. This approach explores differences in abilities and alternative costs between humans and computer agents to achieve symbiotic human-computer interaction.

{{catmain|Human-based computation}}

[[Category:Human-computer interaction]]
[[Category:Computer science]]
[[Category:Collective intelligence]]
[[Category:Social information processing]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Computer science literature</title>
    <id>3179625</id>
    <revision>
      <id>324812281</id>
      <timestamp>2009-11-09T09:28:37Z</timestamp>
      <contributor>
        <username>RussBot</username>
        <id>279219</id>
      </contributor>
      <minor/>
      <comment>Robot: change redirected category [[:Category:Scientific literature|Scientific literature]] to [[:Category:Academic literature|Academic literature]]</comment>
      <text xml:space="preserve">==See also==
* [[:Category:Computer science conferences|Computer science conferences]]

[[Category:Computer science|Literature]]
[[Category:Academic literature]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Mathematical optimization</title>
    <id>18956829</id>
    <revision>
      <id>285198680</id>
      <timestamp>2009-04-21T09:11:03Z</timestamp>
      <contributor>
        <username>JAnDbot</username>
        <id>1725149</id>
      </contributor>
      <minor/>
      <comment>robot  Adding: bs Removing: eo, fa, pt, ru, sl, sv, uk, zh Modifying: cs</comment>
      <text xml:space="preserve">{{catmore|Optimization (mathematics)}}
{{Commons cat|Optimization}}

[[Category:Numerical analysis]]
[[Category:Mathematical analysis]]
[[Category:Computer science]]
[[Category:Mathematical economics]]
[[Category:Operations research]]

[[ar:تصنيف:استمثال رياضي]]
[[bs:Kategorija:Matematička optimizacija]]
[[cs:Kategorie:Optimalizace (matematika)]]
[[de:Kategorie:Optimierung]]
[[es:Categoría:Optimización]]
[[fr:Catégorie:Optimisation]]
[[ko:분류:최적화]]
[[ja:Category:最適化]]
[[scn:Catigurìa:Uttimizzazziuni matimàtica]]
[[tr:Kategori:Optimizasyon]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Operating systems</title>
    <id>693664</id>
    <revision>
      <id>315613635</id>
      <timestamp>2009-09-23T00:08:24Z</timestamp>
      <contributor>
        <username>Xqbot</username>
        <id>8066546</id>
      </contributor>
      <minor/>
      <comment>robot Adding: [[ceb:Kategoriya:Mga sistemang operatibo]], [[tl:Kaurian:Operating system]]</comment>
      <text xml:space="preserve">{{catdiffuse}}
{{Commons cat|Operating systems}}

This [[:Wikipedia:Category|category]] and its subcategories deal with '''[[operating system]]s''', the [[system software]] responsible for the direct control and management of [[computer hardware|hardware]] and basic system operations, as well as running [[application software]] such as word processing programs and Web browsers.

An article about operating systems should be categorized with all the subcategories appropriate to that article.  Only when there are no appropriate subcategories should an article be categorized in the category ''Operating systems'' (see [[:Wikipedia:Categorization and subcategories]] for an explanation).

Articles about operating system concepts and components can be found in [[:Category:Operating system technology]].

{{Operating system}}

[[Category:Computer science]]
[[Category:Computing]]
[[Category:System software]]

[[af:Kategorie:Bedryfstelsels]]
[[ar:تصنيف:نظم تشغيل]]
[[an:Categoría:Sistemas operatibos]]
[[ast:Categoría:Sistemes operativos]]
[[az:Kateqoriya:Əməliyyat sistemləri]]
[[zh-min-nan:Category:Chok-gia̍p hē-thóng]]
[[be-x-old:Катэгорыя:Апэрацыйныя сыстэмы]]
[[bar:Kategorie:Betriebssystem]]
[[bs:Kategorija:Operativni sistemi]]
[[bg:Категория:Операционни системи]]
[[ca:Categoria:Sistemes operatius]]
[[ceb:Kategoriya:Mga sistemang operatibo]]
[[cs:Kategorie:Operační systémy]]
[[cy:Categori:Systemau gweithredu]]
[[da:Kategori:Styresystemer]]
[[de:Kategorie:Betriebssystem]]
[[et:Kategooria:Operatsioonisüsteemid]]
[[es:Categoría:Sistemas operativos]]
[[eo:Kategorio:Operaciumoj]]
[[eu:Kategoria:Sistema eragileak]]
[[fa:رده:سیستم‌های عامل رایانه]]
[[fr:Catégorie:Système d'exploitation]]
[[ga:Catagóir:Córais oibriúcháin]]
[[gl:Categoría:Sistemas operativos]]
[[ko:분류:운영 체제]]
[[hy:Կատեգորիա:Օպերացիոն համակարգեր]]
[[hr:Kategorija:Operacijski sustavi]]
[[id:Kategori:Sistem operasi]]
[[ia:Categoria:Systemas de operation]]
[[is:Flokkur:Stýrikerfi]]
[[it:Categoria:Sistemi operativi]]
[[he:קטגוריה:מערכות הפעלה]]
[[ka:კატეგორია:ოპერაციული სისტემები]]
[[csb:Kategòrëjô:Òperacjowô systema]]
[[lv:Kategorija:Operētājsistēmas]]
[[lb:Kategorie:Betribssystemer]]
[[lt:Kategorija:Operacinės sistemos]]
[[hu:Kategória:Operációs rendszerek]]
[[mk:Категорија:Оперативни системи]]
[[ml:വര്‍ഗ്ഗം:ഓപ്പറേറ്റിങ്ങ് സിസ്റ്റം]]
[[ms:Kategori:Sistem pengendalian]]
[[nl:Categorie:Besturingssysteem]]
[[ja:Category:オペレーティングシステム]]
[[no:Kategori:Operativsystemer]]
[[nn:Kategori:Operativsystem]]
[[oc:Categoria:Sistèma operatiu]]
[[nds:Kategorie:Bedriefssystem]]
[[pl:Kategoria:Systemy operacyjne]]
[[pt:Categoria:Sistemas operativos]]
[[ro:Categorie:Sisteme de operare]]
[[ru:Категория:Операционные системы]]
[[simple:Category:Operating systems]]
[[sk:Kategória:Operačné systémy]]
[[sl:Kategorija:Operacijski sistemi]]
[[szl:Kategoria:Systymy uoperacyjne]]
[[sr:Категорија:Оперативни системи]]
[[fi:Luokka:Käyttöjärjestelmä]]
[[sv:Kategori:Operativsystem]]
[[tl:Kaurian:Operating system]]
[[ta:பகுப்பு:கணினி இயக்கு தளங்கள்]]
[[th:หมวดหมู่:ระบบปฏิบัติการ]]
[[tr:Kategori:İşletim sistemleri]]
[[uk:Категорія:Операційні системи]]
[[vec:Categoria:Sistemi operativi]]
[[vi:Thể loại:Hệ điều hành]]
[[yi:קאַטעגאָריע:אפערירן סיסטעמען]]
[[bat-smg:Kateguorėjė:Uoperacėnės sistemos]]
[[zh:Category:操作系统]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Computer science organizations</title>
    <id>2977994</id>
    <revision>
      <id>319471972</id>
      <timestamp>2009-10-12T19:03:18Z</timestamp>
      <contributor>
        <username>Maksim-bot</username>
        <id>637745</id>
      </contributor>
      <minor/>
      <comment>robot Adding: [[fr:Catégorie:Organisme en informatique]]</comment>
      <text xml:space="preserve">[[Category:Scientific organizations]]
[[Category:Computer-related organizations]]
[[Category:Computer science|Organizations]]

[[es:Categoría:Organizaciones informáticas]]
[[fr:Catégorie:Organisme en informatique]]
[[gl:Categoría:Asociacións informáticas]]
[[pt:Categoria:Organizações de ciência da computação]]</text>
    </revision>
  </page>
  <page>
    <title>User:Panwong2/Dynamic Financial Analysis</title>
    <id>24831423</id>
    <revision>
      <id>323159166</id>
      <timestamp>2009-10-31T20:24:31Z</timestamp>
      <contributor>
        <username>Panwong2</username>
        <id>10726310</id>
      </contributor>
      <comment>/* Analysis &amp; Presentation */</comment>
      <text xml:space="preserve">{| class=&quot;infobox&quot; style=&quot;text-align:center; font-size:95%; background:#f5f5ff; border:1px solid #8888aa;&quot; 
|- style=&quot;background:#c0c0ff&quot;
|-
|{{ #if: {{{image|}}}
  | [[Image:{{{image}}}|220px]]
  | [[File:Arsbreytinglandsfr2000-8 English.png|150px]]
}}
|-
! Dynamic Financial Analysis
|- style=&quot;background:#dadaff&quot;
! Key Uses
|-
| 
[[Business]] [[mix]]&lt;br&gt;
[[Reinsurance]]&lt;br&gt;
[[Asset Allocation]]&lt;br&gt;
[[Profitability]]&lt;br&gt;
[[Solvency]]&lt;br&gt;
[[Sensitivity]]&lt;br&gt;
[[Dependency]]&lt;br&gt;

|- style=&quot;background:#dadaff&quot;
! Elements
|-
|
[[Economic]] [[Scenarios]]&lt;br&gt;
[[Business]] &amp; [[Operational]] [[Models]]&lt;br&gt;
[[Presentation]] &amp; [[Analysis]]&lt;br&gt;
 
|-
| {{navbar|Accounting}}
|}
&lt;noinclude&gt;
[[Category:Finance templates|{{PAGENAME}}]]
[[ru:Шаблон:Бухгалтерский учёт]]
[[ko:틀:회계]]
&lt;/noinclude&gt;
'''Dynamic Financial Analysis''' (DFA) is a [[simulation]] approach that looks at an [[insurance]] enterprise's risks holistically as opposed to traditional [[actuarial]] [[analysis]], which analyzes [[risks]] individually. Specifically DFA reveals the dependencies of [[hazards]] and their impacts on the [[insurance]] company's financial well being such as [[business]] mix, [[reinsurance]], [[asset allocation]], [[profitability]], [[solvency]], and [[compliance]]. 

In addition to projecting [[stochastic]]  future [[economic]] scenarios through using scenario generators such as '''interest rate''', '''underwriting cycle''' and '''jurisdictional risk''' models, DFA also links the scenarios with the '''financial models of the targeted insurance company''' that is being analyzed. Such [[models]] not only reveal the [[operation]] and the [[business structure]] of the company, but also uncover the [[dependencies]] among its business practices. Because DFA tries to account for every aspect of the company, it produces a vast amount of [[data]]. As a result, analyzing and presenting the [[outputs]] effectively is of great importance. 

==Objectives==

DFA is used primarily by [[financial]] practitioners to manage [[profitability]] and financial [[stability]] (the risk control function of DFA)&lt;ref name=&quot;Intro DFA&quot;&gt;Kaufmann, Roger. Andeas Gadmer. Ralf Klett. (2004, May) [http://www.casact.org/library/astin/vol31no1/213.pdf ''Introduction to Dynamic Financial Analysis'']. Retrieved October 23, 2009, from  Casualty Actuarial Society website: http://www.casact.org/library/astin/vol31no1 &lt;/ref&gt; Not only do DFA users seek to maximize [[shareholder]] values, but they also try to maintain [[customer]] values. Furthermore, outputs from DFA could help managers identify strengths and weaknesses of the following areas.&lt;ref name=&quot;Converium&quot;&gt;Blum, Peter. Michel Dacorogna. (2004) [http://www.wiley.co.uk/eoas/pdfs/TAD036-.pdf ''Dynamic Financial Analysis''], Retrieved October 23, 2009, from Converium Ltd website: http://www.scor.fr/www//index.php?id=350&amp;L=2&lt;/ref&gt;

*'''[[Business]] [[mix]]''': estimates relative and absolute value of each line of [[business]] (i.e [[premium]] and [[commission]] level) compared to the company's [[financial]].

*'''[[Reinsurance]]''': uncovers the structure of the company's line of businesses such as [[contract]] types, interrelation among contracts, and cost of [[reinsurance]].

*'''[[Asset Allocation]]''': determines whether a company is taking on too much [[investment risk]], which could be minimized through [[diversification]] of investments.

*'''[[Profitability]]''': measures the [[profitability]] of the company's each line of business.

*'''[[Solvency]]''': reveals [[liquidity]] problems, which are mismatches of [[cash flows]] that a company might experience if it did not have enough [[cash]] to immediately meet [[financial]] [[obligations]].

*'''[[Compliance]]''': assesses the likelihood of [[insurance]] [[regulators]] intervening the company's business due to change in [[regulations]] or deteriorating [[business operations]].

*'''[[Sensitivity]]''': explores the company's reaction to a change in [[strategies]] and [[economic]] [[conditions]] in the future.

*'''[[Dependency]]''': uncovers [[dependencies]] of all kinds of [[risks]] that are hard to understand without a holistic [[modeling]] and [[analysis]] tool.

==Elements==
DFA consists of the following 3 parts: &lt;ref name=&quot;Converium&quot; /&gt;
*'''Scenarios''', generating expected and [[extreme]] economic [[scenarios]] to assess the company's reaction to [[changes]]
*'''Business Models''', quantifying the company's [[business models]] and uncovering the dependencies among them
*'''Analysis Presentation''', presenting the [[analysis]] to the [[executives]] who make [[strategic]] [[decisions]]   

Careful [[calibration]] is required to ensure the [[accuracy]] of the scenarios and the [[correlations]] among [[business models]]. 

===Scenario===
The scenario [[generator]] has to meet the following criteria. &lt;ref name=&quot;Converium&quot;/&gt;

The [[generator]] must:

*Generate individual [[risks]] while keeping track of their [[dependencies]] with one another and with time. (i.e) an increase in the [[price]] of gasoline might lead to less driving mileages of [[automobile]] policy holders, thus leading to fewer [[car]] [[accidents]].
*Produce both [[normal]] and [[abnormal]] behavior of the risk factors. (i.e) a 1% change in [[S&amp;P]] index is normal; a 40% change is extreme.
*Simulate [[stochastic]] [[scenarios]], meaning that [[scenarios]] are not the same every time you run the [[analysis]]. 
*Assign [[mathematical models]] that best imitate the [[behaviors]] of the risk factors. Such models could be found in, though not exclusively, [[actuarial science]], [[finance]] and [[economic]] disciplines.
*Track the incurred [[losses]] and the development of the losses, specifically the [[cash flows]] of the company's operation. This may help [[managers]] recognize the need to implement better [[asset liability management]] strategies.

====Interest Rate Generator====
[[Interest rate]] [[generator]] is the core fundamental of DFA. Many sophisticated [[interest rate]] [[models]] were created in the effort to best imitate the real world interest rate [[behavior]]. Although none of the existing [[models]] are perfect, they have their own [[advantages]] and disadvantages. The following is a simple [[interest rate]] [[model]] used in a publicly access DFA model.&lt;ref name=&quot;D'arcy&quot;&gt;D'arcy, Stephen P. Richard W. Gorvett. Thomas E. Hettinger. Robert J. Walling III.  (1998, Summer) [http://www.casact.org/pubs/forum/98sforum/98sf053.pdf ''Using the Public Access DFA Model''], Retrieved October 23, 2009, from Casualty Actuarial Society website: http://www.casact.org/pubs/forum/98sforum/ &lt;/ref&gt;


=====Cox, Ingersoll, and Ross (CIR) interest rate generator=====
The CIR interest rate model characterizes the short term [[interest rate]] as a mean-reverting [[stochastic]] [[projection]]. Although CIR was first used to project continuous [[changes]] in the [[interest rates]], it is also acceptable to use it to project [[discrete]] changes from one time period to another. Below is the [[formula]]. 

&lt;math&gt;dr_t = a(b-r_t)\, dt + \sigma\sqrt{r_t}\, dW_t&lt;/math&gt;

where &lt;ref name=&quot;D'arcy&quot;/&gt;
*'''b''' = the long-run mean to which the interest rate reverts; the expected interest rate in the long run
*'''a''' = the [[speed]] of [[reversion]] of the interest rate to its long-run mean. (i.e) a = 2 means the interest is expected to return to its long term mean within half a year, and a = 1/5 means it would take 5 years.
*'''&lt;math&gt; r_t&lt;/math&gt;''' = the current short-term interest rate
*&lt;math&gt; \sigma\, &lt;/math&gt; = the [[volatility]] of the [[interest rate]] process expressed as the [[standard deviation]] of historical or projected interest rate [[changes]].

The CIR model has two [[components]]: a [[deterministic]] &lt;math&gt; a(b-r_t)&lt;/math&gt; and a stochastic part&lt;math&gt;\sigma\sqrt{r_t}\, &lt;/math&gt;. The [[deterministic]] part will go in the reverse [[direction]] of what the [[current]] short term rate is heading. In other words, the further the current interest rate is from the long term [[expected]] rate, the harder the [[deterministic]] part tries to reverse it back to the long term [[mean]]. 

The [[stochastic]] part is purely [[random]]; it can either help the current [[interest rate]] deviate from its long term [[mean]] or the reverse. Because this part is multiplied by the [[square root]] of the current interest rate, when the current [[interest rate]] is low, its [[impact]] is [[minimum]], thus leading to the unlikelihood of the [[interest rate]] going below zero, and the [[interest rate]] cannot be [[negative]]. However, the reverse is true is the current rate is high.

=====Jurisdictional Risk Generator=====
In the [[United States]], each state has its own [[regulatory]], [[jurisdictional]] and [[legislative]] bodies, and there are advantages and disadvantages for an [[insurance]] company conducting [[businesses]] in different [[states]]. For example, some states have [[restriction]] on how much rate increase that an insurance company can charge for the [[risks]] on which it takes. Such [[risk]] can severely hampers the insurance entity' [[profitability]] and [[operation]].

In DFA, [[jurisdiction]] [[risk]] is reflected in two ways.&lt;ref name=&quot;D'arcy&quot;/&gt; 
#&quot;'''Acceptable&quot; rate changes''': each state has its own [[limit]] for how much rate increase in [[percentage]] proportional to the existing [[rate]] an [[insurance]] company can charge without attracting regulators' [[scrutiny]]. Under the scenarios, if DFA indicates that the [[insurance]] company needs to charge more than the state's maximum [[limit]] for the [[risks]], that should raise a red flag to the [[executives]] overseeing the insurance [[business]] in that [[region]].
#'''Lag in implementing indicated rate changes''': [[insurance]] companies often do not immediately implement the approved [[rate]] [[changes]], and in fact there is often a [[lag]] of 3 to 6 months. The [[lag]], shown in the [[model]] in terms of years, is longer in [[states]] with harsh [[rate]] [[regulation]].

=====Underwrite Cycles Generator=====
The number of [[policies]] an insurance company can sell depends on the [[macroeconomic]] [[environment]] of the [[insurance]] industry. The DFA scenario accounts for this [[risk]] [[factor]] to best simulate the [[nature]] of [[insurance]] business. 

Below are four underwriting [[cycles]] that an [[insurance]] company may experience.
*'''Mature Hard''': Rates can be increased and may still sell more policies 
*'''Mature Soft''': Rates need to be decrease in order to sell more policies
*'''Immature Hard''': Transition state from mature soft to mature hard
*'''Immature Soft''': Transition state from mature hard to mature soft

===Company &amp; Strategy Modeling===
To estimate the impacts that the [[scenarios]] have on an [[insurance]] company, the company's [[business practices]] needed to be quantified and linked to the [[scenario]] factors such as [[interest rate]] and [[underwriting]] [[cycles]].

'''Types of Models'''
*''Cash Flow Oriented Model'': Such [[model]] tries to imitate the [[cash flows]] of the [[insurance]] company's [[assets]] and [[liabilities]]. Also it assess the impacts on the company's [[financial statement]].

:*Advantages: It might not difficult to project [[cash flows]] linked to [[economic]] [[factors]] for the company's [[assets]].

:*Disadvantages: [[Liabilities]] are often unknown for an insurance company, and thus it is hard to generate outgoing [[cash flows]] for [[claims]].

*''Simple Model'': Such [[model]] only account for part of the [[economic]] [[factors]] of the [[scenarios]]

:*Advantages: The [[model]] is mathematically tractable, and [[accuracy]] can be achieved.

:*Disadvantages: It defeats the purpose of implementing a DFA, which is to analyze potential impacts that changes in [[economic]] [[factors]] can have on the [[insurance]] company's [[financial]] [[performance].

*''Complex Model'': Such [[model]] not only tries to account for all the [[economic]] [[factors]] that the [[scenarios]] generate, but also the [[dependencies]] among the company's lines of [[business]]. It involves sophisticated [[mathematical models]] and [[parameter]] to achieve its [[goal]].

:*Advantages: This approach helps [[executives]] truly understand the [[dependencies]] among its [[business models]] and the [[external]] impacts on the company's [[profitability]].

:*Disadvantages: Such [[model]] is very unlikely to be mathematically tractable. In other words, the model can be totally wrong because no one may know the exact [[dependencies]] among the [[business]] [[models]] and the impacts that [[economic]] [[risks]] can pose to the company.

===Analysis &amp; Presentation===
Without effective [[analysis]] and [[presentation]], [[managers]] can hardly make any sense out of the vast amount of [[data]] that DFA produces. The goal of DFA is to help the [[managers]] to find out whether the company's current [[strategies]] are in line with its [[financial]] [[goals]]. Below are some tricks of conducting and presenting DFA [[analysis]].&lt;ref name=&quot;Corporate Strategy&quot;&gt;Wiesner, Elizabeth R. Charles C. Emma. (2000, Summer) [http://www.casact.org/pubs/forum/00sforum/00sf079.pdf ''A Dynamic Financial Analysis Application Lined to Corporate Strategy''], Retrieved October 23, 2009, from  Casualty Actuarial Society website: http://www.casact.org/pubs/forum/00sforum/.&lt;/ref&gt;

#Keep communication concise and focused.
#Eliminate, if needed, part of the DFA's [[outputs]] that are irrelevant to the company's [[financial]] [[objectives]].
#Include no more than four most important [[results]] in a brief [[executive summary]], and support your [[statements]] with [[graphs]] and [[exhibits]] in the [[appendix]].
#Focus on [[business]] [[development]] [[trend]] as opposed to over emphasize on specific [[numbers]] or the details of the [[model]]. Keep in mind that DFA is only an [[estimate]] of what might happen.
#Support the DFA [[analysis]] with other available [[information]] within the company.

==References==
&lt;references/&gt;



[[Category:Finance]]
[[Category:Mathematics]]
[[Category:Business]]
[[Category:Computer science]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Programming languages</title>
    <id>690571</id>
    <revision>
      <id>321262987</id>
      <timestamp>2009-10-21T20:50:35Z</timestamp>
      <contributor>
        <username>Maksim-bot</username>
        <id>637745</id>
      </contributor>
      <minor/>
      <comment>robot Adding: [[mk:Категорија:Програмски јазици]]</comment>
      <text xml:space="preserve">{{catdiffuse}}

This [[Wikipedia:Category|category]] contains all [[general-purpose programming language]]s either directly or in sub-categories. Articles that do not focus on an individual programming language should instead be categorized under [[:Category:Programming language topics]].

The subcategories in this category are not mutually exclusive. The following are '''hierarchical''' subcategories: 
*[[:Category: Programming language families]]—groups subcategories corresponding to fuzzy overlapping groupings such as [[:Category: Algol programming language family]] and [[:Category: C programming language family]]
*[[:Category: Domain-specific programming languages]]—groups subcategories corresponding to fuzzy overlapping groupings such as [[:Category: Audio programming languages]]

'''WARNING: many of the programming language articles are not yet exhaustively (or even correctly) categorized'''

{{CategoryTOC}}
{{Commons cat|Programming languages}}

[[Category:Computer languages]]
[[Category:Computer programming]]
[[Category:Programming language topics| ]]
[[Category:Computer science]]

[[af:Kategorie:Programmeertale]]
[[ar:تصنيف:لغات برمجة]]
[[ast:Categoría:Llinguaxe de programación]]
[[zh-min-nan:Category:Thêng-sek gí-giân]]
[[be:Катэгорыя:Мовы праграмавання]]
[[be-x-old:Катэгорыя:Мовы праграмаваньня]]
[[bar:Kategorie:Programmiersprache]]
[[bs:Kategorija:Programski jezici]]
[[bg:Категория:Езици за програмиране]]
[[ca:Categoria:Llenguatges de programació]]
[[cs:Kategorie:Programovací jazyky]]
[[da:Kategori:Programmeringssprog]]
[[de:Kategorie:Programmiersprache]]
[[el:Κατηγορία:Γλώσσες προγραμματισμού]]
[[es:Categoría:Lenguajes de programación]]
[[eo:Kategorio:Programlingvoj]]
[[eu:Kategoria:Programazio lengoaiak]]
[[fr:Catégorie:Langage de programmation]]
[[gl:Categoría:Linguaxes de programación]]
[[ko:분류:프로그래밍 언어]]
[[hr:Kategorija:Programski jezici]]
[[id:Kategori:Bahasa pemrograman]]
[[ia:Categoria:Linguages de programmation]]
[[is:Flokkur:Forritunarmál]]
[[it:Categoria:Linguaggi di programmazione]]
[[he:קטגוריה:שפות תכנות]]
[[ka:კატეგორია:დაპროგრამების ენები]]
[[la:Categoria:Codices programmandi]]
[[lv:Kategorija:Programmēšanas valodas]]
[[lt:Kategorija:Programavimo kalbos]]
[[hu:Kategória:Programozási nyelvek]]
[[mk:Категорија:Програмски јазици]]
[[ms:Kategori:Bahasa pengaturcaraan]]
[[nl:Categorie:Programmeertaal]]
[[ja:Category:プログラミング言語]]
[[no:Kategori:Programmeringsspråk]]
[[nn:Kategori:Programmeringsspråk]]
[[nds:Kategorie:Programmeerspraak]]
[[pl:Kategoria:Języki programowania]]
[[pt:Categoria:Linguagens de programação]]
[[ru:Категория:Языки программирования]]
[[simple:Category:Programming languages]]
[[sk:Kategória:Programovacie jazyky]]
[[sl:Kategorija:Programski jeziki]]
[[sr:Категорија:Програмски језици]]
[[fi:Luokka:Ohjelmointikielet]]
[[sv:Kategori:Programspråk]]
[[ta:பகுப்பு:நிரல் மொழிகள்]]
[[kab:Taggayt:Timeslayin n usihel]]
[[th:หมวดหมู่:ภาษาโปรแกรม]]
[[tg:Гурӯҳ:Забонҳои барномасозӣ]]
[[tr:Kategori:Programlama dilleri]]
[[uk:Категорія:Мови програмування]]
[[vi:Thể loại:Ngôn ngữ lập trình]]
[[wuu:分类:程序编制言话]]
[[bat-smg:Kateguorėjė:Pruogramavėma kalbas]]
[[zh:Category:程序设计语言]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Computer scientists</title>
    <id>694790</id>
    <revision>
      <id>315054029</id>
      <timestamp>2009-09-20T06:43:40Z</timestamp>
      <contributor>
        <username>Darkicebot</username>
        <id>6100386</id>
      </contributor>
      <minor/>
      <comment>robot Adding: [[hif:Category:Computer scientists]]</comment>
      <text xml:space="preserve">This category of [[Computer scientist]]s consists of people who do research in the field of [[computer science]]: university professors, researchers employed by industry research laboratories, and independent researchers. This is distinct from people who primarily work on developing computer software, who would be better placed in [[:Category:Software engineers]] or [[:Category:Computer programmers]].
{{catdiffuse}}
{{CatAZ}}
{{Commons cat|Computer scientists}}

[[Category:Computer science|Scientists]]
[[Category:People in information technology|Scientists]]
[[Category:Scientists]]
[[Category:Scholars by subject]]

[[an:Categoría:Informaticos]]
[[ast:Categoría:Informáticos]]
[[zh-min-nan:Category:Tiān-náu kho-ha̍k-ka]]
[[bg:Категория:Информатици]]
[[ca:Categoria:Informàtics]]
[[cs:Kategorie:Informatici]]
[[da:Kategori:Dataloger]]
[[de:Kategorie:Informatiker]]
[[et:Kategooria:Informaatikud]]
[[el:Κατηγορία:Προσωπικότητες της Επιστήμης των Υπολογιστών]]
[[es:Categoría:Informáticos]]
[[eo:Kategorio:Komputikistoj]]
[[ext:Category:Enhormáticus]]
[[fa:رده:دانشمندان کامپیوتر]]
[[hif:Category:Computer scientists]]
[[fr:Catégorie:Personnalité en informatique]]
[[ga:Catagóir:Eolaithe ríomhaireachta]]
[[ko:분류:전산학자]]
[[hr:Kategorija:Računalni znanstvenici]]
[[id:Kategori:Ilmuwan komputer]]
[[is:Flokkur:Tölvunarfræðingar]]
[[it:Categoria:Informatici]]
[[he:קטגוריה:מדעני מחשב]]
[[la:Categoria:Computatores]]
[[lv:Kategorija:Datorzinātnieki]]
[[lb:Kategorie:Informatiker]]
[[li:Categorie:Informatici]]
[[hu:Kategória:Számítástechnikusok]]
[[mk:Категорија:Информатичари]]
[[ms:Kategori:Saintis komputer]]
[[nl:Categorie:Informaticus]]
[[ja:Category:情報工学者]]
[[no:Kategori:Informatikere]]
[[pl:Kategoria:Informatycy]]
[[pt:Categoria:Cientistas da computação]]
[[ru:Категория:Учёные в области теории вычислительных систем]]
[[simple:Category:Computer scientists]]
[[sk:Kategória:Informatici]]
[[sl:Kategorija:Računalnikarji]]
[[sr:Категорија:Информатичари]]
[[fi:Luokka:Tietojenkäsittelytieteilijät]]
[[sv:Kategori:Datavetare]]
[[th:หมวดหมู่:นักวิทยาศาสตร์คอมพิวเตอร์]]
[[tr:Kategori:Bilgisayar bilimcileri]]
[[uk:Категорія:Інформатики]]
[[vi:Thể loại:Nhà khoa học máy tính]]
[[wa:Categoreye:Infôrmatikîs]]
[[zh:Category:计算机科学家]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Computer security</title>
    <id>765969</id>
    <revision>
      <id>324177096</id>
      <timestamp>2009-11-05T23:35:48Z</timestamp>
      <contributor>
        <username>Xelgen</username>
        <id>4210048</id>
      </contributor>
      <minor/>
      <comment>+ iw to hy:wp</comment>
      <text xml:space="preserve">{{Portal|Computer security}}
{{catmore|Computer security}}
{{catdiffuse}}

&lt;!-- [[en:Category:Computer security]] --&gt;
{{Commons cat|Computer security}}

[[Category:Security]]
[[Category:Computing|Security]]
[[Category:Computer science|Security]]
[[Category:Security engineering]]
[[Category:Electronic warfare]]

[[ar:تصنيف:أمن الحاسوب]]
[[be-x-old:Катэгорыя:Інфармацыйная бясьпека]]
[[bg:Категория:Компютърна сигурност]]
[[ca:Categoria:Seguretat informàtica]]
[[cs:Kategorie:Počítačová bezpečnost]]
[[de:Kategorie:IT-Sicherheit]]
[[es:Categoría:Seguridad informática]]
[[eo:Kategorio:Komputila sekureco]]
[[eu:Kategoria:Segurtasun informatikoa]]
[[fa:رده:امنیت رایانه‌ای]]
[[fr:Catégorie:Sécurité informatique]]
[[ga:Catagóir:Slándáil ríomhaireachta]]
[[gl:Categoría:Seguridade informática]]
[[ko:분류:컴퓨터 보안]]
[[hr:Kategorija:Računalna sigurnost]]
[[id:Kategori:Keamanan komputer]]
[[it:Categoria:Sicurezza informatica]]
[[he:קטגוריה:אבטחת מחשבים]]
[[hy:Կատեգորիա:Տեղեկատվական անվտանգություն]]
[[lv:Kategorija:Datoru drošība]]
[[ms:Kategori:Keselamatan komputer]]
[[nl:Categorie:Informatiebeveiliging]]
[[ja:Category:コンピュータセキュリティ]]
[[no:Kategori:Datasikkerhet]]
[[pl:Kategoria:Bezpieczeństwo komputerowe]]
[[pt:Categoria:Segurança da informação]]
[[ro:Categorie:Securitatea calculatoarelor]]
[[ru:Категория:Информационная безопасность]]
[[simple:Category:Computer security]]
[[sk:Kategória:Počítačová bezpečnosť]]
[[sv:Kategori:Datasäkerhet]]
[[th:หมวดหมู่:ความมั่นคงของระบบคอมพิวเตอร์]]
[[tr:Kategori:Bilgisayar güvenliği]]
[[uk:Категорія:Інформаційна безпека]]
[[zh:Category:電腦安全]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Soft computing</title>
    <id>24087054</id>
    <revision>
      <id>309632789</id>
      <timestamp>2009-08-23T17:53:31Z</timestamp>
      <contributor>
        <username>Pohta ce-am pohtit</username>
        <id>7417813</id>
      </contributor>
      <minor/>
      <comment>Quick-adding category [[:Category:Computer science|Computer science]] (using [[WP:HOTCAT|HotCat]])</comment>
      <text xml:space="preserve">{{catmore}}

[[Category:Computer science]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Software engineering</title>
    <id>700943</id>
    <revision>
      <id>314730072</id>
      <timestamp>2009-09-18T15:22:06Z</timestamp>
      <contributor>
        <username>MastiBot</username>
        <id>9900577</id>
      </contributor>
      <minor/>
      <comment>robot Adding: [[bar:Kategorie:Softwaretechnik]]</comment>
      <text xml:space="preserve">{{Commons cat|Software engineering}}
'''[[Software engineering]]''' is the application of [[computer science]]s, [[project management]], and other techniques to create [[computer software]].

While it started out as a mathematical discipline, software engineering now has the characteristics of an [[engineering]] discipline. However, like other engineering disciplines there is a wide range of practices. For instance, in some subfields certification is available, while in other fields some practitioners regard themselves more as craftsmen than engineers. 

{{catmore}}

See [[:Category:Systems engineering]] for such topics as: '''Requirements analysis, Systems analysis, Systems architecture, System life cycle,''' and many more.

&lt;!-- Software engineering is either a subcat of software or computing, but not both.  With the current definition of category software, software engineering is best a subcat of that. --&gt;
{{catdiffuse}}

[[Category:Computer science]]
[[Category:Information technology management]]
[[Category:Software|Engineering]]	 
[[Category:Systems engineering]]

[[af:Kategorie:Sagtewareontwikkeling]]
[[ar:تصنيف:هندسة البرمجيات]]
[[bar:Kategorie:Softwaretechnik]]
[[ca:Categoria:Enginyeria de programari]]
[[cs:Kategorie:Softwarové inženýrství]]
[[cy:Categori:Peirianneg meddalwedd]]
[[da:Kategori:Systemudvikling]]
[[de:Kategorie:Softwaretechnik]]
[[es:Categoría:Ingeniería de software]]
[[fa:رده:مهندسی نرم‌افزار]]
[[fr:Catégorie:Génie logiciel]]
[[gl:Categoría:Enxeñaría de Software]]
[[ko:분류:소프트웨어 공학]]
[[hr:Kategorija:Programsko inženjerstvo]]
[[id:Kategori:Rekayasa perangkat lunak]]
[[is:Flokkur:Hugbúnaðarverkfræði]]
[[it:Categoria:Ingegneria del software]]
[[he:קטגוריה:הנדסת תוכנה]]
[[lt:Kategorija:Programų inžinerija]]
[[hu:Kategória:Szoftverfejlesztés]]
[[nl:Categorie:Software engineering]]
[[ja:Category:ソフトウェア工学]]
[[no:Kategori:Programvareutvikling]]
[[pl:Kategoria:Inżynieria oprogramowania]]
[[pt:Categoria:Engenharia de software]]
[[ru:Категория:Разработка программного обеспечения]]
[[sk:Kategória:Softvérové inžinierstvo]]
[[sl:Kategorija:Programsko inženirstvo]]
[[fi:Luokka:Ohjelmistotuotanto]]
[[th:หมวดหมู่:วิศวกรรมซอฟต์แวร์]]
[[tr:Kategori:Yazılım mühendisliği]]
[[vi:Thể loại:Kỹ nghệ phần mềm]]
[[zh:Category:软件工程]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Theoretical computer science</title>
    <id>990361</id>
    <revision>
      <id>319222109</id>
      <timestamp>2009-10-11T13:12:07Z</timestamp>
      <contributor>
        <username>Synthebot</username>
        <id>3658625</id>
      </contributor>
      <minor/>
      <comment>robot Adding: [[bg:Категория:Теоретична информатика]]</comment>
      <text xml:space="preserve">{{catmore}}

[[Category:Computer science]]
[[Category:Mathematics]]
[[Category:Scientific theories|Computer science]]

[[ar:تصنيف:معلوماتية نظرية]]
[[bar:Kategorie:Theoretische Informatik]]
[[bg:Категория:Теоретична информатика]]
[[ca:Categoria:Informàtica teòrica]]
[[cs:Kategorie:Teoretická informatika]]
[[cy:Categori:Cyfrifiadureg ddamcaniaethol]]
[[de:Kategorie:Theoretische Informatik]]
[[es:Categoría:Informática teórica]]
[[eo:Kategorio:Teoria komputiko]]
[[eu:Kategoria:Informatika teorikoa]]
[[fa:رده:علوم نظری رایانه]]
[[fr:Catégorie:Informatique théorique]]
[[ko:분류:이론 전산학]]
[[hr:Kategorija:Teoretsko računarstvo]]
[[ia:Categoria:Informatica theoretic]]
[[it:Categoria:Teorie dell'informatica]]
[[ml:വര്‍ഗ്ഗം:തിയററ്റിക്കല്‍ കമ്പ്യൂട്ടര്‍ സയന്‍സ്]]
[[nl:Categorie:Theoretische informatica]]
[[ja:Category:理論計算機科学]]
[[nn:Kategori:Teoretisk informatikk]]
[[simple:Category:Theoretical computer science]]
[[sk:Kategória:Teoretická počítačová veda]]
[[sl:Kategorija:Teoretično računalništvo]]
[[sr:Категорија:Теоријско рачунарство]]
[[fi:Luokka:Tietojenkäsittelyteoria]]
[[th:หมวดหมู่:ทฤษฎีวิทยาการคอมพิวเตอร์]]
[[tr:Kategori:Kuramsal bilgisayar bilimi]]
[[vi:Thể loại:Khoa học máy tính lý thuyết]]
[[zh:Category:计算机科学基础理论]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Computer science stubs</title>
    <id>1859318</id>
    <revision>
      <id>323291392</id>
      <timestamp>2009-11-01T15:51:17Z</timestamp>
      <contributor>
        <username>Zorrobot</username>
        <id>7218328</id>
      </contributor>
      <minor/>
      <comment>robot Adding: [[no:Kategori:Informatikkstubber]]</comment>
      <text xml:space="preserve">{{WPSS-cat}}
{{verylargestub}}
{{Stub Category|article=[[computer science]]|newstub=comp-sci-stub|category=Computer science}}

{{see also|:Category:Computer science articles needing expert attention}}
&lt;center&gt;{{CatAZ}}&lt;/center&gt;
[[Category:Computer stubs|*Computer science]]
[[Category:Science stubs]]
[[Category:WikiProject Computer science]]

[[ar:تصنيف:بذرة علوم حاسب]]
[[da:Kategori:Påbegyndte it-artikler]]
[[el:Κατηγορία:Επιστήμη υπολογιστών-επέκταση]]
[[ko:분류:전산학에 관한 토막글]]
[[ia:Categoria:Peciettas de informatica]]
[[is:Flokkur:Tölvunarfræðistubbar]]
[[lt:Kategorija:Nepilni Informatika]]
[[mk:Категорија:Никулци за информатика]]
[[no:Kategori:Informatikkstubber]]
[[sk:Kategória:Informatické výhonky]]
[[zh:Category:電腦科學小作品]]</text>
    </revision>
  </page>
  <page>
    <title>Category:Wikipedia:Books on computer science</title>
    <id>22543611</id>
    <revision>
      <id>285789223</id>
      <timestamp>2009-04-24T03:37:26Z</timestamp>
      <contributor>
        <username>Cydebot</username>
        <id>1215485</id>
      </contributor>
      <minor/>
      <comment>Robot - Speedily moving category Wikipedia:Books on Applied sciences to Wikipedia:Books on applied sciences per [[WP:CFD|CFD]].</comment>
      <text xml:space="preserve">[[Category:Wikipedia:Books on applied sciences|Computer science]]
[[Category:Computer science|β]]</text>
    </revision>
  </page>
</mediawiki>
